Ip   8:
	Id: 1
Ip  18:
	Id: 6
Ip  28:
	Id: 1
Ip  38:
	Id: 7
Ip  39:
	Id: 18
Ip  40:
End of prog.

================ Begin of struct dump ==================

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 5

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 0

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 0

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

================ End of struct dump ==================

Optimizing to mov r?x, num


---------- Filling labels --------



---------- End filling labels --------


================ Begin of struct dump ==================
Not standart instrucion.
Command < (null): 20 > | Native/x86 size: 20/10 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 10
Checksum: 64
	+Using register, its id: 0

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 11

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 45

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

Translating mov reg, num

##########
	 0: 48 b8 
##########

10:Push/Pop REG

##########
	 0: 50 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########


##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba 00 00 3a 02 00 00 
 8: 00 00 48 b8 00 00 00 00 
16: 00 00 14 40 50 f2 0f 10 
24: 44 24 00 41 52 53 52 51 
32: 50 49 89 e4 48 83 e4 f0 
40: e8 1f 2a 06 fe 4c 89 e4 
48: 58 59 5a 5b 41 5a 5f c3 
56: c3 00 

====== x86 buffer dump end =======

