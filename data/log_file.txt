Ip   8:
	Id: 17
	Yeah, it is jump
Ip  18:
	Id: 0
Ip  19:
	Id: 1
Ip  29:
	Id: 7
Ip  30:
	Id: 18
Ip  31:
End of prog.

================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 19

Command < HLT: 0 > | Native/x86 size: 1/7 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

================ End of struct dump ==================

Optimization attempt: mov r?x, num


---------- Filling labels --------

	Yeah, it is jump
 0: Trying to find x86 ip for ip 19:
	 Found, x86 ip is 12


---------- End filling labels --------


================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 12

Command < HLT: 0 > | Native/x86 size: 1/7 | x86 ip: 5

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 12
Checksum: 32
	+Operating width digit, value: 1

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 23

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 64

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating exit()

##########
	 0: 6a 3c 58 31 ff 0f 05 
##########

<12>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba 78 10 40 00 00 00 
 8: 00 00 e8 07 00 00 00 6a 
16: 3c 58 31 ff 0f 05 48 be 
24: 00 00 00 00 00 00 f0 3f 
32: 56 f2 0f 10 44 24 00 f2 
40: 48 0f 2d f0 56 58 41 52 
48: 53 52 51 50 49 89 e4 48 
56: 83 e4 f0 e8 0b 00 00 00 
64: 4c 89 e4 58 59 5a 5b 41 
72: 5a 5f c3 00 

====== x86 buffer dump end =======

