Ip   8:
	Id: 16
Ip   9:
	Id: 16
Ip  10:
	Id: 16
Ip  11:
	Id: 6
Ip  21:
	Id: 6
Ip  31:
	Id: 6
Ip  41:
	Id: 1
Ip  51:
	Id: 1
Ip  61:
	Id: 15
	Yeah, it is jump
Ip  71:
	Id: 17
	Yeah, it is jump
Ip  81:
	Id: 18
Ip  82:
	Id: 1
Ip  92:
	Id: 1
Ip 102:
	Id: 15
	Yeah, it is jump
Ip 112:
	Id: 17
	Yeah, it is jump
Ip 122:
	Id: 18
Ip 123:
	Id: 18
Ip 124:
	Id: 17
	Yeah, it is jump
Ip 134:
	Id: 1
Ip 144:
	Id: 1
Ip 154:
	Id: 12
	Yeah, it is jump
Ip 164:
	Id: 1
Ip 174:
	Id: 1
Ip 184:
	Id: 14
	Yeah, it is jump
Ip 194:
	Id: 17
	Yeah, it is jump
Ip 204:
	Id: 18
Ip 205:
	Id: 1
Ip 215:
	Id: 1
Ip 225:
	Id: 2
Ip 226:
	Id: 1
Ip 236:
	Id: 2
Ip 237:
	Id: 1
Ip 247:
	Id: 2
Ip 248:
	Id: 6
Ip 258:
	Id: 1
Ip 268:
	Id: 1
Ip 278:
	Id: 2
Ip 279:
	Id: 6
Ip 289:
	Id: 1
Ip 299:
	Id: 1
Ip 309:
	Id: 3
Ip 310:
	Id: 6
Ip 320:
	Id: 18
Ip 321:
	Id: 1
Ip 331:
	Id: 1
Ip 341:
	Id: 14
	Yeah, it is jump
Ip 351:
	Id: 1
Ip 361:
	Id: 7
Ip 362:
	Id: 18
Ip 363:
	Id: 1
Ip 373:
	Id: 1
Ip 383:
	Id: 2
Ip 384:
	Id: 1
Ip 394:
	Id: 1
Ip 404:
	Id: 2
Ip 405:
	Id: 5
Ip 406:
	Id: 7
Ip 407:
	Id: 18
Ip 408:
	Id: 1
Ip 418:
	Id: 1
Ip 428:
	Id: 14
	Yeah, it is jump
Ip 438:
	Id: 1
Ip 448:
	Id: 1
Ip 458:
	Id: 14
	Yeah, it is jump
Ip 468:
	Id: 1
Ip 478:
	Id: 1
Ip 488:
	Id: 1
Ip 498:
	Id: 2
Ip 499:
	Id: 5
Ip 500:
	Id: 7
Ip 501:
	Id: 18
Ip 502:
	Id: 1
Ip 512:
	Id: 1
Ip 522:
	Id: 14
	Yeah, it is jump
Ip 532:
	Id: 1
Ip 542:
	Id: 1
Ip 552:
	Id: 1
Ip 562:
	Id: 2
Ip 563:
	Id: 5
Ip 564:
	Id: 19
Ip 565:
	Id: 6
Ip 575:
	Id: 1
Ip 585:
	Id: 1
Ip 595:
	Id: 2
Ip 596:
	Id: 6
Ip 606:
	Id: 1
Ip 616:
	Id: 1
Ip 626:
	Id: 7
Ip 627:
	Id: 7
Ip 628:
	Id: 18
Ip 629:
	Id: 1
Ip 639:
	Id: 1
Ip 649:
	Id: 2
Ip 650:
	Id: 6
Ip 660:
	Id: 1
Ip 670:
	Id: 1
Ip 680:
	Id: 2
Ip 681:
	Id: 6
Ip 691:
	Id: 1
Ip 701:
	Id: 19
Ip 702:
	Id: 6
Ip 712:
	Id: 1
Ip 722:
	Id: 1
Ip 732:
	Id: 1
Ip 742:
	Id: 3
Ip 743:
	Id: 5
Ip 744:
	Id: 6
Ip 754:
	Id: 1
Ip 764:
	Id: 1
Ip 774:
	Id: 1
Ip 784:
	Id: 4
Ip 785:
	Id: 5
Ip 786:
	Id: 6
Ip 796:
	Id: 1
Ip 806:
	Id: 1
Ip 816:
	Id: 7
Ip 817:
	Id: 7
Ip 818:
	Id: 18
Ip 819:
	Id: 1
Ip 829:
	Id: 7
Ip 830:
	Id: 18
Ip 831:
End of prog.

================ Begin of struct dump ==================

Command < IN > | Orig ip: 8 | x86 ip: 0

Command < IN > | Orig ip: 9 | x86 ip: 33

Command < IN > | Orig ip: 10 | x86 ip: 66

Command < POP > | Orig ip: 11 | x86 ip: 99
Checksum: 64
	+Using register, its id: 2

Command < POP > | Orig ip: 21 | x86 ip: 100
Checksum: 64
	+Using register, its id: 1

Command < POP > | Orig ip: 31 | x86 ip: 101
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 41 | x86 ip: 102
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 51 | x86 ip: 103
Checksum: 32
	+Operating width digit, value: 0

Command < JNE > | Orig ip: 61 | x86 ip: 114
	Yeah, it is jump
	+Wants to jump into 82

Command < CALL > | Orig ip: 71 | x86 ip: 140
	Yeah, it is jump
	+Wants to jump into 408

Command < RET > | Orig ip: 81 | x86 ip: 145

Command < PUSH > | Orig ip: 82 | x86 ip: 146
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 92 | x86 ip: 147
Checksum: 32
	+Operating width digit, value: 0

Command < JNE > | Orig ip: 102 | x86 ip: 158
	Yeah, it is jump
	+Wants to jump into 124

Command < CALL > | Orig ip: 112 | x86 ip: 184
	Yeah, it is jump
	+Wants to jump into 502

Command < RET > | Orig ip: 122 | x86 ip: 189

Command < RET > | Orig ip: 123 | x86 ip: 190

Command < CALL > | Orig ip: 124 | x86 ip: 191
	Yeah, it is jump
	+Wants to jump into 205

Command < PUSH > | Orig ip: 134 | x86 ip: 196
Checksum: 64
	+Using register, its id: 3

Command < PUSH > | Orig ip: 144 | x86 ip: 197
Checksum: 32
	+Operating width digit, value: 0

Command < JA > | Orig ip: 154 | x86 ip: 208
	Yeah, it is jump
	+Wants to jump into 321

Command < PUSH > | Orig ip: 164 | x86 ip: 234
Checksum: 64
	+Using register, its id: 3

Command < PUSH > | Orig ip: 174 | x86 ip: 235
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 184 | x86 ip: 246
	Yeah, it is jump
	+Wants to jump into 363

Command < CALL > | Orig ip: 194 | x86 ip: 272
	Yeah, it is jump
	+Wants to jump into 629

Command < RET > | Orig ip: 204 | x86 ip: 277

Command < PUSH > | Orig ip: 205 | x86 ip: 278
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 215 | x86 ip: 279
Checksum: 64
	+Using register, its id: 2

Command < MUL > | Orig ip: 225 | x86 ip: 280

Command < PUSH > | Orig ip: 226 | x86 ip: 306
Checksum: 32
	+Operating width digit, value: 4

Command < MUL > | Orig ip: 236 | x86 ip: 317

Command < PUSH > | Orig ip: 237 | x86 ip: 343
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 247 | x86 ip: 354

Command < POP > | Orig ip: 248 | x86 ip: 380
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 258 | x86 ip: 388
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 268 | x86 ip: 389
Checksum: 64
	+Using register, its id: 1

Command < MUL > | Orig ip: 278 | x86 ip: 390

Command < POP > | Orig ip: 279 | x86 ip: 416
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 289 | x86 ip: 424
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 299 | x86 ip: 432
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < ADD > | Orig ip: 309 | x86 ip: 440

Command < POP > | Orig ip: 310 | x86 ip: 466
Checksum: 64
	+Using register, its id: 3

Command < RET > | Orig ip: 320 | x86 ip: 467

Command < PUSH > | Orig ip: 321 | x86 ip: 468
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 331 | x86 ip: 469
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 341 | x86 ip: 480
	Yeah, it is jump
	+Wants to jump into 819

Command < PUSH > | Orig ip: 351 | x86 ip: 506
Checksum: 32
	+Operating width digit, value: 1337

Command < OUT > | Orig ip: 361 | x86 ip: 517

Command < RET > | Orig ip: 362 | x86 ip: 551

Command < PUSH > | Orig ip: 363 | x86 ip: 552
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH > | Orig ip: 373 | x86 ip: 563
Checksum: 64
	+Using register, its id: 0

Command < MUL > | Orig ip: 383 | x86 ip: 564

Command < PUSH > | Orig ip: 384 | x86 ip: 590
Checksum: 32
	+Operating width digit, value: -1

Command < PUSH > | Orig ip: 394 | x86 ip: 601
Checksum: 64
	+Using register, its id: 1

Command < MUL > | Orig ip: 404 | x86 ip: 602

Command < DIV > | Orig ip: 405 | x86 ip: 628

Command < OUT > | Orig ip: 406 | x86 ip: 654

Command < RET > | Orig ip: 407 | x86 ip: 688

Command < PUSH > | Orig ip: 408 | x86 ip: 689
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 418 | x86 ip: 690
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 428 | x86 ip: 701
	Yeah, it is jump
	+Wants to jump into 321

Command < PUSH > | Orig ip: 438 | x86 ip: 727
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 448 | x86 ip: 728
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 458 | x86 ip: 739
	Yeah, it is jump
	+Wants to jump into 819

Command < PUSH > | Orig ip: 468 | x86 ip: 765
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 478 | x86 ip: 766
Checksum: 32
	+Operating width digit, value: -1

Command < PUSH > | Orig ip: 488 | x86 ip: 777
Checksum: 64
	+Using register, its id: 2

Command < MUL > | Orig ip: 498 | x86 ip: 778

Command < DIV > | Orig ip: 499 | x86 ip: 804

Command < OUT > | Orig ip: 500 | x86 ip: 830

Command < RET > | Orig ip: 501 | x86 ip: 864

Command < PUSH > | Orig ip: 502 | x86 ip: 865
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 512 | x86 ip: 866
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 522 | x86 ip: 877
	Yeah, it is jump
	+Wants to jump into 363

Command < PUSH > | Orig ip: 532 | x86 ip: 903
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 542 | x86 ip: 904
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 552 | x86 ip: 905
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 562 | x86 ip: 916

Command < DIV > | Orig ip: 563 | x86 ip: 942

Command < SQR > | Orig ip: 564 | x86 ip: 968

Command < POP > | Orig ip: 565 | x86 ip: 984
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 575 | x86 ip: 992
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 585 | x86 ip: 1000
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 595 | x86 ip: 1011

Command < POP > | Orig ip: 596 | x86 ip: 1037
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH > | Orig ip: 606 | x86 ip: 1045
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 616 | x86 ip: 1053
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < OUT > | Orig ip: 626 | x86 ip: 1061

Command < OUT > | Orig ip: 627 | x86 ip: 1095

Command < RET > | Orig ip: 628 | x86 ip: 1129

Command < PUSH > | Orig ip: 629 | x86 ip: 1130
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 639 | x86 ip: 1131
Checksum: 32
	+Operating width digit, value: 2

Command < MUL > | Orig ip: 649 | x86 ip: 1142

Command < POP > | Orig ip: 650 | x86 ip: 1168
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 660 | x86 ip: 1176
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 670 | x86 ip: 1177
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 680 | x86 ip: 1188

Command < POP > | Orig ip: 681 | x86 ip: 1214
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 691 | x86 ip: 1222
Checksum: 64
	+Using register, its id: 3

Command < SQR > | Orig ip: 701 | x86 ip: 1223

Command < POP > | Orig ip: 702 | x86 ip: 1239
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 712 | x86 ip: 1247
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 722 | x86 ip: 1255
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 732 | x86 ip: 1263
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < ADD > | Orig ip: 742 | x86 ip: 1271

Command < DIV > | Orig ip: 743 | x86 ip: 1297

Command < POP > | Orig ip: 744 | x86 ip: 1323
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH > | Orig ip: 754 | x86 ip: 1331
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 764 | x86 ip: 1339
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 774 | x86 ip: 1347
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < SUB > | Orig ip: 784 | x86 ip: 1355

Command < DIV > | Orig ip: 785 | x86 ip: 1381

Command < POP > | Orig ip: 786 | x86 ip: 1407
Checksum: 160
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH > | Orig ip: 796 | x86 ip: 1415
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH > | Orig ip: 806 | x86 ip: 1423
Checksum: 160
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT > | Orig ip: 816 | x86 ip: 1431

Command < OUT > | Orig ip: 817 | x86 ip: 1465

Command < RET > | Orig ip: 818 | x86 ip: 1499

Command < PUSH > | Orig ip: 819 | x86 ip: 1500
Checksum: 32
	+Operating width digit, value: 228

Command < OUT > | Orig ip: 829 | x86 ip: 1511

Command < RET > | Orig ip: 830 | x86 ip: 1545

================ End of struct dump ==================



---------- Filling labels --------

	Yeah, it is jump
 8: Trying to find x86 ip for ip 82:
	 Found, x86 ip is 146
	Yeah, it is jump
 9: Trying to find x86 ip for ip 408:
	 Found, x86 ip is 689
	Yeah, it is jump
13: Trying to find x86 ip for ip 124:
	 Found, x86 ip is 191
	Yeah, it is jump
14: Trying to find x86 ip for ip 502:
	 Found, x86 ip is 865
	Yeah, it is jump
17: Trying to find x86 ip for ip 205:
	 Found, x86 ip is 278
	Yeah, it is jump
20: Trying to find x86 ip for ip 321:
	 Found, x86 ip is 468
	Yeah, it is jump
23: Trying to find x86 ip for ip 363:
	 Found, x86 ip is 552
	Yeah, it is jump
24: Trying to find x86 ip for ip 629:
	 Found, x86 ip is 1130
	Yeah, it is jump
45: Trying to find x86 ip for ip 819:
	 Found, x86 ip is 1500
	Yeah, it is jump
60: Trying to find x86 ip for ip 321:
	 Found, x86 ip is 468
	Yeah, it is jump
63: Trying to find x86 ip for ip 819:
	 Found, x86 ip is 1500
	Yeah, it is jump
73: Trying to find x86 ip for ip 363:
	 Found, x86 ip is 552


---------- End filling labels --------


================ Begin of struct dump ==================

Command < IN > | Orig ip: 8 | x86 ip: 0

Command < IN > | Orig ip: 9 | x86 ip: 33

Command < IN > | Orig ip: 10 | x86 ip: 66

Command < POP > | Orig ip: 11 | x86 ip: 99
Checksum: 64
	+Using register, its id: 2

Command < POP > | Orig ip: 21 | x86 ip: 100
Checksum: 64
	+Using register, its id: 1

Command < POP > | Orig ip: 31 | x86 ip: 101
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 41 | x86 ip: 102
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 51 | x86 ip: 103
Checksum: 32
	+Operating width digit, value: 0

Command < JNE > | Orig ip: 61 | x86 ip: 114
	Yeah, it is jump
	+Wants to jump into 146

Command < CALL > | Orig ip: 71 | x86 ip: 140
	Yeah, it is jump
	+Wants to jump into 689

Command < RET > | Orig ip: 81 | x86 ip: 145

Command < PUSH > | Orig ip: 82 | x86 ip: 146
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 92 | x86 ip: 147
Checksum: 32
	+Operating width digit, value: 0

Command < JNE > | Orig ip: 102 | x86 ip: 158
	Yeah, it is jump
	+Wants to jump into 191

Command < CALL > | Orig ip: 112 | x86 ip: 184
	Yeah, it is jump
	+Wants to jump into 865

Command < RET > | Orig ip: 122 | x86 ip: 189

Command < RET > | Orig ip: 123 | x86 ip: 190

Command < CALL > | Orig ip: 124 | x86 ip: 191
	Yeah, it is jump
	+Wants to jump into 278

Command < PUSH > | Orig ip: 134 | x86 ip: 196
Checksum: 64
	+Using register, its id: 3

Command < PUSH > | Orig ip: 144 | x86 ip: 197
Checksum: 32
	+Operating width digit, value: 0

Command < JA > | Orig ip: 154 | x86 ip: 208
	Yeah, it is jump
	+Wants to jump into 468

Command < PUSH > | Orig ip: 164 | x86 ip: 234
Checksum: 64
	+Using register, its id: 3

Command < PUSH > | Orig ip: 174 | x86 ip: 235
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 184 | x86 ip: 246
	Yeah, it is jump
	+Wants to jump into 552

Command < CALL > | Orig ip: 194 | x86 ip: 272
	Yeah, it is jump
	+Wants to jump into 1130

Command < RET > | Orig ip: 204 | x86 ip: 277

Command < PUSH > | Orig ip: 205 | x86 ip: 278
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 215 | x86 ip: 279
Checksum: 64
	+Using register, its id: 2

Command < MUL > | Orig ip: 225 | x86 ip: 280

Command < PUSH > | Orig ip: 226 | x86 ip: 306
Checksum: 32
	+Operating width digit, value: 4

Command < MUL > | Orig ip: 236 | x86 ip: 317

Command < PUSH > | Orig ip: 237 | x86 ip: 343
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 247 | x86 ip: 354

Command < POP > | Orig ip: 248 | x86 ip: 380
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 258 | x86 ip: 388
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 268 | x86 ip: 389
Checksum: 64
	+Using register, its id: 1

Command < MUL > | Orig ip: 278 | x86 ip: 390

Command < POP > | Orig ip: 279 | x86 ip: 416
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 289 | x86 ip: 424
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 299 | x86 ip: 432
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < ADD > | Orig ip: 309 | x86 ip: 440

Command < POP > | Orig ip: 310 | x86 ip: 466
Checksum: 64
	+Using register, its id: 3

Command < RET > | Orig ip: 320 | x86 ip: 467

Command < PUSH > | Orig ip: 321 | x86 ip: 468
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 331 | x86 ip: 469
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 341 | x86 ip: 480
	Yeah, it is jump
	+Wants to jump into 1500

Command < PUSH > | Orig ip: 351 | x86 ip: 506
Checksum: 32
	+Operating width digit, value: 1337

Command < OUT > | Orig ip: 361 | x86 ip: 517

Command < RET > | Orig ip: 362 | x86 ip: 551

Command < PUSH > | Orig ip: 363 | x86 ip: 552
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH > | Orig ip: 373 | x86 ip: 563
Checksum: 64
	+Using register, its id: 0

Command < MUL > | Orig ip: 383 | x86 ip: 564

Command < PUSH > | Orig ip: 384 | x86 ip: 590
Checksum: 32
	+Operating width digit, value: -1

Command < PUSH > | Orig ip: 394 | x86 ip: 601
Checksum: 64
	+Using register, its id: 1

Command < MUL > | Orig ip: 404 | x86 ip: 602

Command < DIV > | Orig ip: 405 | x86 ip: 628

Command < OUT > | Orig ip: 406 | x86 ip: 654

Command < RET > | Orig ip: 407 | x86 ip: 688

Command < PUSH > | Orig ip: 408 | x86 ip: 689
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 418 | x86 ip: 690
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 428 | x86 ip: 701
	Yeah, it is jump
	+Wants to jump into 468

Command < PUSH > | Orig ip: 438 | x86 ip: 727
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 448 | x86 ip: 728
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 458 | x86 ip: 739
	Yeah, it is jump
	+Wants to jump into 1500

Command < PUSH > | Orig ip: 468 | x86 ip: 765
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 478 | x86 ip: 766
Checksum: 32
	+Operating width digit, value: -1

Command < PUSH > | Orig ip: 488 | x86 ip: 777
Checksum: 64
	+Using register, its id: 2

Command < MUL > | Orig ip: 498 | x86 ip: 778

Command < DIV > | Orig ip: 499 | x86 ip: 804

Command < OUT > | Orig ip: 500 | x86 ip: 830

Command < RET > | Orig ip: 501 | x86 ip: 864

Command < PUSH > | Orig ip: 502 | x86 ip: 865
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 512 | x86 ip: 866
Checksum: 32
	+Operating width digit, value: 0

Command < JE > | Orig ip: 522 | x86 ip: 877
	Yeah, it is jump
	+Wants to jump into 552

Command < PUSH > | Orig ip: 532 | x86 ip: 903
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 542 | x86 ip: 904
Checksum: 64
	+Using register, its id: 2

Command < PUSH > | Orig ip: 552 | x86 ip: 905
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 562 | x86 ip: 916

Command < DIV > | Orig ip: 563 | x86 ip: 942

Command < SQR > | Orig ip: 564 | x86 ip: 968

Command < POP > | Orig ip: 565 | x86 ip: 984
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 575 | x86 ip: 992
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 585 | x86 ip: 1000
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 595 | x86 ip: 1011

Command < POP > | Orig ip: 596 | x86 ip: 1037
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH > | Orig ip: 606 | x86 ip: 1045
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 616 | x86 ip: 1053
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < OUT > | Orig ip: 626 | x86 ip: 1061

Command < OUT > | Orig ip: 627 | x86 ip: 1095

Command < RET > | Orig ip: 628 | x86 ip: 1129

Command < PUSH > | Orig ip: 629 | x86 ip: 1130
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 639 | x86 ip: 1131
Checksum: 32
	+Operating width digit, value: 2

Command < MUL > | Orig ip: 649 | x86 ip: 1142

Command < POP > | Orig ip: 650 | x86 ip: 1168
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 660 | x86 ip: 1176
Checksum: 64
	+Using register, its id: 1

Command < PUSH > | Orig ip: 670 | x86 ip: 1177
Checksum: 32
	+Operating width digit, value: -1

Command < MUL > | Orig ip: 680 | x86 ip: 1188

Command < POP > | Orig ip: 681 | x86 ip: 1214
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 691 | x86 ip: 1222
Checksum: 64
	+Using register, its id: 3

Command < SQR > | Orig ip: 701 | x86 ip: 1223

Command < POP > | Orig ip: 702 | x86 ip: 1239
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 712 | x86 ip: 1247
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 722 | x86 ip: 1255
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH > | Orig ip: 732 | x86 ip: 1263
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < ADD > | Orig ip: 742 | x86 ip: 1271

Command < DIV > | Orig ip: 743 | x86 ip: 1297

Command < POP > | Orig ip: 744 | x86 ip: 1323
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH > | Orig ip: 754 | x86 ip: 1331
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 764 | x86 ip: 1339
Checksum: 160
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH > | Orig ip: 774 | x86 ip: 1347
Checksum: 160
	+Operating width digit, value: 2
--- Adresses to memory

Command < SUB > | Orig ip: 784 | x86 ip: 1355

Command < DIV > | Orig ip: 785 | x86 ip: 1381

Command < POP > | Orig ip: 786 | x86 ip: 1407
Checksum: 160
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH > | Orig ip: 796 | x86 ip: 1415
Checksum: 160
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH > | Orig ip: 806 | x86 ip: 1423
Checksum: 160
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT > | Orig ip: 816 | x86 ip: 1431

Command < OUT > | Orig ip: 817 | x86 ip: 1465

Command < RET > | Orig ip: 818 | x86 ip: 1499

Command < PUSH > | Orig ip: 819 | x86 ip: 1500
Checksum: 32
	+Operating width digit, value: 228

Command < OUT > | Orig ip: 829 | x86 ip: 1511

Command < RET > | Orig ip: 830 | x86 ip: 1545

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

Translating IN
##########
	 0: 57 
##########


##########
	 0: 48 8d 7c 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########

Translating IN
##########
	 0: 57 
##########


##########
	 0: 48 8d 7c 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########

Translating IN
##########
	 0: 57 
##########


##########
	 0: 48 8d 7c 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########

99:Push/Pop REG

##########
	 0: 5a 
##########

100:Push/Pop REG

##########
	 0: 59 
##########

101:Push/Pop REG

##########
	 0: 58 
##########

102:Push/Pop REG

##########
	 0: 50 
##########

<103>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

8: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating RET
##########
	 0: c3 
##########

146:Push/Pop REG

##########
	 0: 51 
##########

<147>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

13: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating RET
##########
	 0: c3 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e8 
##########

196:Push/Pop REG

##########
	 0: 53 
##########

<197>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

20: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 87 
##########

234:Push/Pop REG

##########
	 0: 53 
##########

<235>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

23: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 84 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating RET
##########
	 0: c3 
##########

278:Push/Pop REG

##########
	 0: 50 
##########

279:Push/Pop REG

##########
	 0: 52 
##########

28: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

<306>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

30: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

<343>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

32: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########

388:Push/Pop REG

##########
	 0: 51 
##########

389:Push/Pop REG

##########
	 0: 51 
##########

36: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########

40: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 58 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

466:Push/Pop REG

##########
	 0: 5b 
##########

Translating RET
##########
	 0: c3 
##########

468:Push/Pop REG

##########
	 0: 52 
##########

<469>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

45: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 84 
##########

<506>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########

<552>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

563:Push/Pop REG

##########
	 0: 50 
##########

51: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

<590>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

601:Push/Pop REG

##########
	 0: 51 
##########

54: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

55: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########

689:Push/Pop REG

##########
	 0: 51 
##########

<690>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

60: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 84 
##########

727:Push/Pop REG

##########
	 0: 52 
##########

<728>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

63: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 84 
##########

765:Push/Pop REG

##########
	 0: 51 
##########

<766>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

777:Push/Pop REG

##########
	 0: 52 
##########

67: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

68: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########

865:Push/Pop REG

##########
	 0: 52 
##########

<866>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

73: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 84 
##########

903:Push/Pop REG

##########
	 0: 50 
##########

904:Push/Pop REG

##########
	 0: 52 
##########

<905>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

77: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

78: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########

<1000>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

83: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########

1130:Push/Pop REG

##########
	 0: 50 
##########

<1131>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

92: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########

1176:Push/Pop REG

##########
	 0: 51 
##########

<1177>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

96: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########

1222:Push/Pop REG

##########
	 0: 53 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########

104: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 58 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

105: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########

110: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

111: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########

<1500>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########


##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba 00 70 aa 01 00 00 
 8: 00 00 57 48 8d 7c 24 00 
16: 41 52 53 52 51 50 49 89 
24: e4 48 83 e4 f0 e8 0e d4 
32: 95 fe 4c 89 e4 58 59 5a 
40: 5b 41 5a 57 48 8d 7c 24 
48: 00 41 52 53 52 51 50 49 
56: 89 e4 48 83 e4 f0 e8 ed 
64: d3 95 fe 4c 89 e4 58 59 
72: 5a 5b 41 5a 57 48 8d 7c 
80: 24 00 41 52 53 52 51 50 
88: 49 89 e4 48 83 e4 f0 e8 
96: cc d3 95 fe 4c 89 e4 58 
104: 59 5a 5b 41 5a 5a 59 58 
112: 50 48 be 00 00 00 00 00 
120: 00 00 00 56 f2 0f 10 44 
128: 24 00 f2 0f 10 4c 24 08 
136: 48 83 c4 10 66 0f 2e c1 
144: 0f 85 06 00 00 00 e8 20 
152: 02 00 00 c3 51 48 be 00 
160: 00 00 00 00 00 00 00 56 
168: f2 0f 10 44 24 00 f2 0f 
176: 10 4c 24 08 48 83 c4 10 
184: 66 0f 2e c1 0f 85 07 00 
192: 00 00 e8 a4 02 00 00 c3 
200: c3 e8 52 00 00 00 53 48 
208: be 00 00 00 00 00 00 00 
216: 00 56 f2 0f 10 44 24 00 
224: f2 0f 10 4c 24 08 48 83 
232: c4 10 66 0f 2e c1 0f 87 
240: ea 00 00 00 53 48 be 00 
248: 00 00 00 00 00 00 00 56 
256: f2 0f 10 44 24 00 f2 0f 
264: 10 4c 24 08 48 83 c4 10 
272: 66 0f 2e c1 0f 84 18 01 
280: 00 00 e8 55 03 00 00 c3 
288: 50 52 f2 0f 10 44 24 00 
296: f2 0f 10 4c 24 08 48 83 
304: c4 08 f2 0f 59 c1 f2 0f 
312: 11 44 24 00 48 be 00 00 
320: 00 00 00 00 10 40 56 f2 
328: 0f 10 44 24 00 f2 0f 10 
336: 4c 24 08 48 83 c4 08 f2 
344: 0f 59 c1 f2 0f 11 44 24 
352: 00 48 be 00 00 00 00 00 
360: 00 f0 bf 56 f2 0f 10 44 
368: 24 00 f2 0f 10 4c 24 08 
376: 48 83 c4 08 f2 0f 59 c1 
384: f2 0f 11 44 24 00 5f 49 
392: 89 ba 08 00 00 00 51 51 
400: f2 0f 10 44 24 00 f2 0f 
408: 10 4c 24 08 48 83 c4 08 
416: f2 0f 59 c1 f2 0f 11 44 
424: 24 00 5f 49 89 ba 10 00 
432: 00 00 49 8b ba 10 00 00 
440: 00 57 49 8b ba 08 00 00 
448: 00 57 f2 0f 10 44 24 00 
456: f2 0f 10 4c 24 08 48 83 
464: c4 08 f2 0f 58 c1 f2 0f 
472: 11 44 24 00 5b c3 52 48 
480: be 00 00 00 00 00 00 00 
488: 00 56 f2 0f 10 44 24 00 
496: f2 0f 10 4c 24 08 48 83 
504: c4 10 66 0f 2e c1 0f 84 
512: e2 03 00 00 48 be 00 00 
520: 00 00 00 e4 94 40 56 f2 
528: 0f 10 44 24 00 41 52 53 
536: 52 51 50 49 89 e4 48 83 
544: e4 f0 e8 04 d0 95 fe 4c 
552: 89 e4 58 59 5a 5b 41 5a 
560: 5f c3 48 be 00 00 00 00 
568: 00 00 00 40 56 50 f2 0f 
576: 10 44 24 00 f2 0f 10 4c 
584: 24 08 48 83 c4 08 f2 0f 
592: 59 c1 f2 0f 11 44 24 00 
600: 48 be 00 00 00 00 00 00 
608: f0 bf 56 51 f2 0f 10 44 
616: 24 00 f2 0f 10 4c 24 08 
624: 48 83 c4 08 f2 0f 59 c1 
632: f2 0f 11 44 24 00 f2 0f 
640: 10 44 24 00 f2 0f 10 4c 
648: 24 08 48 83 c4 08 f2 0f 
656: 5e c1 f2 0f 11 44 24 00 
664: f2 0f 10 44 24 00 41 52 
672: 53 52 51 50 49 89 e4 48 
680: 83 e4 f0 e8 7b cf 95 fe 
688: 4c 89 e4 58 59 5a 5b 41 
696: 5a 5f c3 51 48 be 00 00 
704: 00 00 00 00 00 00 56 f2 
712: 0f 10 44 24 00 f2 0f 10 
720: 4c 24 08 48 83 c4 10 66 
728: 0f 2e c1 0f 84 fd fe ff 
736: ff 52 48 be 00 00 00 00 
744: 00 00 00 00 56 f2 0f 10 
752: 44 24 00 f2 0f 10 4c 24 
760: 08 48 83 c4 10 66 0f 2e 
768: c1 0f 84 df 02 00 00 51 
776: 48 be 00 00 00 00 00 00 
784: f0 bf 56 52 f2 0f 10 44 
792: 24 00 f2 0f 10 4c 24 08 
800: 48 83 c4 08 f2 0f 59 c1 
808: f2 0f 11 44 24 00 f2 0f 
816: 10 44 24 00 f2 0f 10 4c 
824: 24 08 48 83 c4 08 f2 0f 
832: 5e c1 f2 0f 11 44 24 00 
840: f2 0f 10 44 24 00 41 52 
848: 53 52 51 50 49 89 e4 48 
856: 83 e4 f0 e8 cb ce 95 fe 
864: 4c 89 e4 58 59 5a 5b 41 
872: 5a 5f c3 52 48 be 00 00 
880: 00 00 00 00 00 00 56 f2 
888: 0f 10 44 24 00 f2 0f 10 
896: 4c 24 08 48 83 c4 10 66 
904: 0f 2e c1 0f 84 a1 fe ff 
912: ff 50 52 48 be 00 00 00 
920: 00 00 00 f0 bf 56 f2 0f 
928: 10 44 24 00 f2 0f 10 4c 
936: 24 08 48 83 c4 08 f2 0f 
944: 59 c1 f2 0f 11 44 24 00 
952: f2 0f 10 44 24 00 f2 0f 
960: 10 4c 24 08 48 83 c4 08 
968: f2 0f 5e c1 f2 0f 11 44 
976: 24 00 f2 0f 10 44 24 00 
984: 66 0f 51 c0 f2 0f 11 44 
992: 24 00 5f 49 89 ba 18 00 
1000: 00 00 49 8b ba 18 00 00 
1008: 00 57 48 be 00 00 00 00 
1016: 00 00 f0 bf 56 f2 0f 10 
1024: 44 24 00 f2 0f 10 4c 24 
1032: 08 48 83 c4 08 f2 0f 59 
1040: c1 f2 0f 11 44 24 00 5f 
1048: 49 89 ba 20 00 00 00 49 
1056: 8b ba 18 00 00 00 57 49 
1064: 8b ba 20 00 00 00 57 f2 
1072: 0f 10 44 24 00 41 52 53 
1080: 52 51 50 49 89 e4 48 83 
1088: e4 f0 e8 e4 cd 95 fe 4c 
1096: 89 e4 58 59 5a 5b 41 5a 
1104: 5f f2 0f 10 44 24 00 41 
1112: 52 53 52 51 50 49 89 e4 
1120: 48 83 e4 f0 e8 c2 cd 95 
1128: fe 4c 89 e4 58 59 5a 5b 
1136: 41 5a 5f c3 50 48 be 00 
1144: 00 00 00 00 00 00 40 56 
1152: f2 0f 10 44 24 00 f2 0f 
1160: 10 4c 24 08 48 83 c4 08 
1168: f2 0f 59 c1 f2 0f 11 44 
1176: 24 00 5f 49 89 ba 08 00 
1184: 00 00 51 48 be 00 00 00 
1192: 00 00 00 f0 bf 56 f2 0f 
1200: 10 44 24 00 f2 0f 10 4c 
1208: 24 08 48 83 c4 08 f2 0f 
1216: 59 c1 f2 0f 11 44 24 00 
1224: 5f 49 89 ba 10 00 00 00 
1232: 53 f2 0f 10 44 24 00 66 
1240: 0f 51 c0 f2 0f 11 44 24 
1248: 00 5f 49 89 ba 18 00 00 
1256: 00 49 8b ba 08 00 00 00 
1264: 57 49 8b ba 10 00 00 00 
1272: 57 49 8b ba 18 00 00 00 
1280: 57 f2 0f 10 44 24 00 f2 
1288: 0f 10 4c 24 08 48 83 c4 
1296: 08 f2 0f 58 c1 f2 0f 11 
1304: 44 24 00 f2 0f 10 44 24 
1312: 00 f2 0f 10 4c 24 08 48 
1320: 83 c4 08 f2 0f 5e c1 f2 
1328: 0f 11 44 24 00 5f 49 89 
1336: ba 20 00 00 00 49 8b ba 
1344: 08 00 00 00 57 49 8b ba 
1352: 18 00 00 00 57 49 8b ba 
1360: 10 00 00 00 57 f2 0f 10 
1368: 44 24 00 f2 0f 10 4c 24 
1376: 08 48 83 c4 08 f2 0f 5c 
1384: c1 f2 0f 11 44 24 00 f2 
1392: 0f 10 44 24 00 f2 0f 10 
1400: 4c 24 08 48 83 c4 08 f2 
1408: 0f 5e c1 f2 0f 11 44 24 
1416: 00 5f 49 89 ba 28 00 00 
1424: 00 49 8b ba 20 00 00 00 
1432: 57 49 8b ba 28 00 00 00 
1440: 57 f2 0f 10 44 24 00 41 
1448: 52 53 52 51 50 49 89 e4 
1456: 48 83 e4 f0 e8 72 cc 95 
1464: fe 4c 89 e4 58 59 5a 5b 
1472: 41 5a 5f f2 0f 10 44 24 
1480: 00 41 52 53 52 51 50 49 
1488: 89 e4 48 83 e4 f0 e8 50 
1496: cc 95 fe 4c 89 e4 58 59 
1504: 5a 5b 41 5a 5f c3 48 be 
1512: 00 00 00 00 00 80 6c 40 
1520: 56 f2 0f 10 44 24 00 41 
1528: 52 53 52 51 50 49 89 e4 
1536: 48 83 e4 f0 e8 22 cc 95 
1544: fe 4c 89 e4 58 59 5a 5b 
1552: 41 5a 5f c3 c3 00 

====== x86 buffer dump end =======

