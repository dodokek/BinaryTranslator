Ip   8:
	Id: 17
	Yeah, it is jump
Ip  18:
	Id: 18
Ip  19:
	Id: 6
Ip  29:
	Id: 1
Ip  39:
	Id: 1
Ip  49:
	Id: 6
Ip  59:
	Id: 1
Ip  69:
	Id: 6
Ip  79:
	Id: 16
Ip  80:
	Id: 6
Ip  90:
	Id: 16
Ip  91:
	Id: 6
Ip 101:
	Id: 16
Ip 102:
	Id: 6
Ip 112:
	Id: 1
Ip 122:
	Id: 1
Ip 132:
	Id: 15
	Yeah, it is jump
Ip 142:
	Id: 1
Ip 152:
	Id: 1
Ip 162:
	Id: 15
	Yeah, it is jump
Ip 172:
	Id: 1
Ip 182:
	Id: 1
Ip 192:
	Id: 15
	Yeah, it is jump
Ip 202:
	Id: 1
Ip 212:
	Id: 7
Ip 213:
	Id: 6
Ip 223:
	Id: 1
Ip 233:
	Id: 18
Ip 234:
	Id: 9
	Yeah, it is jump
Ip 244:
	Id: 1
Ip 254:
	Id: 7
Ip 255:
	Id: 6
Ip 265:
	Id: 1
Ip 275:
	Id: 18
Ip 276:
	Id: 9
	Yeah, it is jump
Ip 286:
	Id: 1
Ip 296:
	Id: 1
Ip 306:
	Id: 1
Ip 316:
	Id: 4
Ip 317:
	Id: 5
Ip 318:
	Id: 6
Ip 328:
	Id: 1
Ip 338:
	Id: 7
Ip 339:
	Id: 6
Ip 349:
	Id: 1
Ip 359:
	Id: 18
Ip 360:
	Id: 9
	Yeah, it is jump
Ip 370:
	Id: 1
Ip 380:
	Id: 6
Ip 390:
	Id: 1
Ip 400:
	Id: 1
Ip 410:
	Id: 2
Ip 411:
	Id: 1
Ip 421:
	Id: 2
Ip 422:
	Id: 1
Ip 432:
	Id: 1
Ip 442:
	Id: 2
Ip 443:
	Id: 4
Ip 444:
	Id: 6
Ip 454:
	Id: 1
Ip 464:
	Id: 7
Ip 465:
	Id: 1
Ip 475:
	Id: 1
Ip 485:
	Id: 15
	Yeah, it is jump
Ip 495:
	Id: 1
Ip 505:
	Id: 1
Ip 515:
	Id: 2
Ip 516:
	Id: 1
Ip 526:
	Id: 1
Ip 536:
	Id: 4
Ip 537:
	Id: 5
Ip 538:
	Id: 6
Ip 548:
	Id: 1
Ip 558:
	Id: 7
Ip 559:
	Id: 6
Ip 569:
	Id: 1
Ip 579:
	Id: 18
Ip 580:
	Id: 9
	Yeah, it is jump
Ip 590:
	Id: 1
Ip 600:
	Id: 1
Ip 610:
	Id: 12
	Yeah, it is jump
Ip 620:
	Id: 1
Ip 630:
	Id: 7
Ip 631:
	Id: 1
Ip 641:
	Id: 7
Ip 642:
	Id: 6
Ip 652:
	Id: 1
Ip 662:
	Id: 18
Ip 663:
	Id: 9
	Yeah, it is jump
Ip 673:
	Id: 1
Ip 683:
	Id: 1
Ip 693:
	Id: 2
Ip 694:
	Id: 1
Ip 704:
	Id: 1
Ip 714:
	Id: 4
Ip 715:
	Id: 1
Ip 725:
	Id: 19
Ip 726:
	Id: 3
Ip 727:
	Id: 5
Ip 728:
	Id: 6
Ip 738:
	Id: 1
Ip 748:
	Id: 1
Ip 758:
	Id: 2
Ip 759:
	Id: 1
Ip 769:
	Id: 19
Ip 770:
	Id: 1
Ip 780:
	Id: 1
Ip 790:
	Id: 4
Ip 791:
	Id: 4
Ip 792:
	Id: 5
Ip 793:
	Id: 6
Ip 803:
	Id: 1
Ip 813:
	Id: 7
Ip 814:
	Id: 1
Ip 824:
	Id: 7
Ip 825:
	Id: 6
Ip 835:
	Id: 1
Ip 845:
	Id: 18
Ip 846:
End of prog.

================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 19

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/33 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/33 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/33 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 370

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 286

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 244

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 276

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 360

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 390

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 590

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 590

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 673

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 825

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

================ End of struct dump ==================

Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics


---------- Filling labels --------

	Yeah, it is jump
 0: Trying to find x86 ip for ip 19:
	 Found, x86 ip is 6
	Yeah, it is jump
16: Trying to find x86 ip for ip 370:
	 Found, x86 ip is 905
	Yeah, it is jump
19: Trying to find x86 ip for ip 286:
	 Found, x86 ip is 664
	Yeah, it is jump
22: Trying to find x86 ip for ip 244:
	 Found, x86 ip is 588
	Yeah, it is jump
28: Trying to find x86 ip for ip 276:
	 Found, x86 ip is 659
	Yeah, it is jump
34: Trying to find x86 ip for ip 360:
	 Found, x86 ip is 900
	Yeah, it is jump
46: Trying to find x86 ip for ip 390:
	 Found, x86 ip is 950
	Yeah, it is jump
63: Trying to find x86 ip for ip 590:
	 Found, x86 ip is 1652
	Yeah, it is jump
77: Trying to find x86 ip for ip 590:
	 Found, x86 ip is 1652
	Yeah, it is jump
80: Trying to find x86 ip for ip 673:
	 Found, x86 ip is 1867
	Yeah, it is jump
88: Trying to find x86 ip for ip 825:
	 Found, x86 ip is 2559


---------- End filling labels --------


================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 6

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 5

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 6
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 7
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 8
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 19
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 53
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 64
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/33 | x86 ip: 98

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 131
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/33 | x86 ip: 165

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 198
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/33 | x86 ip: 232

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 265
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 299
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 333
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 344
	Yeah, it is jump
	+Wants to jump into 905

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 370
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 404
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 415
	Yeah, it is jump
	+Wants to jump into 664

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 441
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 475
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 486
	Yeah, it is jump
	+Wants to jump into 588

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 512
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 546

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 580
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 581
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 582

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 583
	Yeah, it is jump
	+Wants to jump into 659

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 588
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 622

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 656
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 657
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 658

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 659
	Yeah, it is jump
	+Wants to jump into 900

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 664
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 698
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 732
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 743

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 769

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 795
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 829
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 863

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 897
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 898
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 899

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 900
	Yeah, it is jump
	+Wants to jump into 950

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 905
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 916
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 950
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 961
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 995

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1021
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1055

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1081
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1115
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1149

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1175

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1201
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1235
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1269

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1303
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1337
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 1348
	Yeah, it is jump
	+Wants to jump into 1652

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1374
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1408
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1419

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1445
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1479
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1490

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 1516

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1542
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1576
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1610

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1644
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1645
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1646

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1647
	Yeah, it is jump
	+Wants to jump into 1652

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1652
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1663
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 1697
	Yeah, it is jump
	+Wants to jump into 1867

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1723
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1757

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1791
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1825

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1859
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1860
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1861

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1862
	Yeah, it is jump
	+Wants to jump into 2559

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1867
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1878
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1912

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1938
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1972
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1983

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2009
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 2043

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 2059

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2085

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2111
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2145
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2156
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 2190

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2216
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 2250

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2266
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2300
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2311

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2337

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2363

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2389
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2423
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 2457

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2491
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 2525

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 2559
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 2560
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 2561

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating RET
##########
	 0: c3 
##########

6:Push/Pop REG

##########
	 0: 5a 
##########

7:Push/Pop REG

##########
	 0: 52 
##########

<8>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<53>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating IN
##########
	 0: 57 
##########


##########
	 0: 48 8d 7c 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating IN
##########
	 0: 57 
##########


##########
	 0: 48 8d 7c 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating IN
##########
	 0: 57 
##########


##########
	 0: 48 8d 7c 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<333>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

16: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<404>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

19: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<475>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

22: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

580:Push/Pop REG

##########
	 0: 5a 
##########

581:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

656:Push/Pop REG

##########
	 0: 5a 
##########

657:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<732>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

38: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

39: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

897:Push/Pop REG

##########
	 0: 5a 
##########

898:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<905>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<950>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

51: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

53: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

56: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

57: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1337>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

63: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1408>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

66: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1479>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

69: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

70: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1644:Push/Pop REG

##########
	 0: 5a 
##########

1645:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1652>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

80: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 87 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1859:Push/Pop REG

##########
	 0: 5a 
##########

1860:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1867>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

91: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1972>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

94: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

97: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 58 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

98: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<2145>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

102: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<2300>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

107: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

108: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

109: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

2559:Push/Pop REG

##########
	 0: 5a 
##########

2560:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########


##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba 00 f0 33 01 00 00 
 8: 00 00 e8 01 00 00 00 c3 
16: 5a 52 48 be 00 00 00 00 
24: 00 b4 ad 40 56 50 f2 0f 
32: 10 44 24 00 48 83 c4 08 
40: f2 48 0f 2d f0 48 c1 e6 
48: 03 49 01 f2 5f 49 89 ba 
56: 00 00 00 00 49 29 f2 48 
64: be 00 00 00 00 00 46 a0 
72: 40 56 50 f2 0f 10 44 24 
80: 00 48 83 c4 08 f2 48 0f 
88: 2d f0 48 c1 e6 03 49 01 
96: f2 5f 49 89 ba 08 00 00 
104: 00 49 29 f2 57 48 8d 7c 
112: 24 00 41 52 53 52 51 50 
120: 49 89 e4 48 83 e4 f0 e8 
128: 0d 4c 0c ff 4c 89 e4 58 
136: 59 5a 5b 41 5a 50 f2 0f 
144: 10 44 24 00 48 83 c4 08 
152: f2 48 0f 2d f0 48 c1 e6 
160: 03 49 01 f2 5f 49 89 ba 
168: 10 00 00 00 49 29 f2 57 
176: 48 8d 7c 24 00 41 52 53 
184: 52 51 50 49 89 e4 48 83 
192: e4 f0 e8 ca 4b 0c ff 4c 
200: 89 e4 58 59 5a 5b 41 5a 
208: 50 f2 0f 10 44 24 00 48 
216: 83 c4 08 f2 48 0f 2d f0 
224: 48 c1 e6 03 49 01 f2 5f 
232: 49 89 ba 18 00 00 00 49 
240: 29 f2 57 48 8d 7c 24 00 
248: 41 52 53 52 51 50 49 89 
256: e4 48 83 e4 f0 e8 87 4b 
264: 0c ff 4c 89 e4 58 59 5a 
272: 5b 41 5a 50 f2 0f 10 44 
280: 24 00 48 83 c4 08 f2 48 
288: 0f 2d f0 48 c1 e6 03 49 
296: 01 f2 5f 49 89 ba 20 00 
304: 00 00 49 29 f2 50 f2 0f 
312: 10 44 24 00 48 83 c4 08 
320: f2 48 0f 2d f0 48 c1 e6 
328: 03 49 01 f2 49 8b ba 10 
336: 00 00 00 57 49 29 f2 48 
344: be 00 00 00 00 00 00 00 
352: 00 56 f2 0f 10 44 24 00 
360: f2 0f 10 4c 24 08 48 83 
368: c4 10 66 0f 2e c1 0f 85 
376: 17 02 00 00 50 f2 0f 10 
384: 44 24 00 48 83 c4 08 f2 
392: 48 0f 2d f0 48 c1 e6 03 
400: 49 01 f2 49 8b ba 18 00 
408: 00 00 57 49 29 f2 48 be 
416: 00 00 00 00 00 00 00 00 
424: 56 f2 0f 10 44 24 00 f2 
432: 0f 10 4c 24 08 48 83 c4 
440: 10 66 0f 2e c1 0f 85 df 
448: 00 00 00 50 f2 0f 10 44 
456: 24 00 48 83 c4 08 f2 48 
464: 0f 2d f0 48 c1 e6 03 49 
472: 01 f2 49 8b ba 20 00 00 
480: 00 57 49 29 f2 48 be 00 
488: 00 00 00 00 00 00 00 56 
496: f2 0f 10 44 24 00 f2 0f 
504: 10 4c 24 08 48 83 c4 10 
512: 66 0f 2e c1 0f 85 4c 00 
520: 00 00 50 f2 0f 10 44 24 
528: 00 48 83 c4 08 f2 48 0f 
536: 2d f0 48 c1 e6 03 49 01 
544: f2 49 8b ba 08 00 00 00 
552: 57 49 29 f2 f2 0f 10 44 
560: 24 00 41 52 53 52 51 50 
568: 49 89 e4 48 83 e4 f0 e8 
576: 48 48 0c ff 4c 89 e4 58 
584: 59 5a 5b 41 5a 5f 5a 52 
592: c3 e9 47 00 00 00 50 f2 
600: 0f 10 44 24 00 48 83 c4 
608: 08 f2 48 0f 2d f0 48 c1 
616: e6 03 49 01 f2 49 8b ba 
624: 00 00 00 00 57 49 29 f2 
632: f2 0f 10 44 24 00 41 52 
640: 53 52 51 50 49 89 e4 48 
648: 83 e4 f0 e8 fc 47 0c ff 
656: 4c 89 e4 58 59 5a 5b 41 
664: 5a 5f 5a 52 c3 e9 ec 00 
672: 00 00 50 f2 0f 10 44 24 
680: 00 48 83 c4 08 f2 48 0f 
688: 2d f0 48 c1 e6 03 49 01 
696: f2 49 8b ba 18 00 00 00 
704: 57 49 29 f2 50 f2 0f 10 
712: 44 24 00 48 83 c4 08 f2 
720: 48 0f 2d f0 48 c1 e6 03 
728: 49 01 f2 49 8b ba 20 00 
736: 00 00 57 49 29 f2 48 be 
744: 00 00 00 00 00 00 00 00 
752: 56 f2 0f 10 44 24 00 f2 
760: 0f 10 4c 24 08 48 83 c4 
768: 08 f2 0f 5c c1 f2 0f 11 
776: 44 24 00 f2 0f 10 44 24 
784: 00 f2 0f 10 4c 24 08 48 
792: 83 c4 08 f2 0f 5e c1 f2 
800: 0f 11 44 24 00 50 f2 0f 
808: 10 44 24 00 48 83 c4 08 
816: f2 48 0f 2d f0 48 c1 e6 
824: 03 49 01 f2 5f 49 89 ba 
832: 28 00 00 00 49 29 f2 50 
840: f2 0f 10 44 24 00 48 83 
848: c4 08 f2 48 0f 2d f0 48 
856: c1 e6 03 49 01 f2 49 8b 
864: ba 28 00 00 00 57 49 29 
872: f2 f2 0f 10 44 24 00 41 
880: 52 53 52 51 50 49 89 e4 
888: 48 83 e4 f0 e8 0b 47 0c 
896: ff 4c 89 e4 58 59 5a 5b 
904: 41 5a 5f 5a 52 c3 e9 2d 
912: 00 00 00 48 be 00 00 00 
920: 00 00 e4 94 40 56 50 f2 
928: 0f 10 44 24 00 48 83 c4 
936: 08 f2 48 0f 2d f0 48 c1 
944: e6 03 49 01 f2 5f 49 89 
952: ba 30 00 00 00 49 29 f2 
960: 48 be 00 00 00 00 00 00 
968: 10 40 56 50 f2 0f 10 44 
976: 24 00 48 83 c4 08 f2 48 
984: 0f 2d f0 48 c1 e6 03 49 
992: 01 f2 49 8b ba 10 00 00 
1000: 00 57 49 29 f2 f2 0f 10 
1008: 44 24 00 f2 0f 10 4c 24 
1016: 08 48 83 c4 08 f2 0f 59 
1024: c1 f2 0f 11 44 24 00 50 
1032: f2 0f 10 44 24 00 48 83 
1040: c4 08 f2 48 0f 2d f0 48 
1048: c1 e6 03 49 01 f2 49 8b 
1056: ba 20 00 00 00 57 49 29 
1064: f2 f2 0f 10 44 24 00 f2 
1072: 0f 10 4c 24 08 48 83 c4 
1080: 08 f2 0f 59 c1 f2 0f 11 
1088: 44 24 00 50 f2 0f 10 44 
1096: 24 00 48 83 c4 08 f2 48 
1104: 0f 2d f0 48 c1 e6 03 49 
1112: 01 f2 49 8b ba 18 00 00 
1120: 00 57 49 29 f2 50 f2 0f 
1128: 10 44 24 00 48 83 c4 08 
1136: f2 48 0f 2d f0 48 c1 e6 
1144: 03 49 01 f2 49 8b ba 18 
1152: 00 00 00 57 49 29 f2 f2 
1160: 0f 10 44 24 00 f2 0f 10 
1168: 4c 24 08 48 83 c4 08 f2 
1176: 0f 59 c1 f2 0f 11 44 24 
1184: 00 f2 0f 10 44 24 00 f2 
1192: 0f 10 4c 24 08 48 83 c4 
1200: 08 f2 0f 5c c1 f2 0f 11 
1208: 44 24 00 50 f2 0f 10 44 
1216: 24 00 48 83 c4 08 f2 48 
1224: 0f 2d f0 48 c1 e6 03 49 
1232: 01 f2 5f 49 89 ba 38 00 
1240: 00 00 49 29 f2 50 f2 0f 
1248: 10 44 24 00 48 83 c4 08 
1256: f2 48 0f 2d f0 48 c1 e6 
1264: 03 49 01 f2 49 8b ba 38 
1272: 00 00 00 57 49 29 f2 f2 
1280: 0f 10 44 24 00 41 52 53 
1288: 52 51 50 49 89 e4 48 83 
1296: e4 f0 e8 75 45 0c ff 4c 
1304: 89 e4 58 59 5a 5b 41 5a 
1312: 5f 50 f2 0f 10 44 24 00 
1320: 48 83 c4 08 f2 48 0f 2d 
1328: f0 48 c1 e6 03 49 01 f2 
1336: 49 8b ba 38 00 00 00 57 
1344: 49 29 f2 48 be 00 00 00 
1352: 00 00 00 00 00 56 f2 0f 
1360: 10 44 24 00 f2 0f 10 4c 
1368: 24 08 48 83 c4 10 66 0f 
1376: 2e c1 0f 85 16 01 00 00 
1384: 50 f2 0f 10 44 24 00 48 
1392: 83 c4 08 f2 48 0f 2d f0 
1400: 48 c1 e6 03 49 01 f2 49 
1408: 8b ba 10 00 00 00 57 49 
1416: 29 f2 48 be 00 00 00 00 
1424: 00 00 00 40 56 f2 0f 10 
1432: 44 24 00 f2 0f 10 4c 24 
1440: 08 48 83 c4 08 f2 0f 59 
1448: c1 f2 0f 11 44 24 00 50 
1456: f2 0f 10 44 24 00 48 83 
1464: c4 08 f2 48 0f 2d f0 48 
1472: c1 e6 03 49 01 f2 49 8b 
1480: ba 18 00 00 00 57 49 29 
1488: f2 48 be 00 00 00 00 00 
1496: 00 00 00 56 f2 0f 10 44 
1504: 24 00 f2 0f 10 4c 24 08 
1512: 48 83 c4 08 f2 0f 5c c1 
1520: f2 0f 11 44 24 00 f2 0f 
1528: 10 44 24 00 f2 0f 10 4c 
1536: 24 08 48 83 c4 08 f2 0f 
1544: 5e c1 f2 0f 11 44 24 00 
1552: 50 f2 0f 10 44 24 00 48 
1560: 83 c4 08 f2 48 0f 2d f0 
1568: 48 c1 e6 03 49 01 f2 5f 
1576: 49 89 ba 28 00 00 00 49 
1584: 29 f2 50 f2 0f 10 44 24 
1592: 00 48 83 c4 08 f2 48 0f 
1600: 2d f0 48 c1 e6 03 49 01 
1608: f2 49 8b ba 28 00 00 00 
1616: 57 49 29 f2 f2 0f 10 44 
1624: 24 00 41 52 53 52 51 50 
1632: 49 89 e4 48 83 e4 f0 e8 
1640: 20 44 0c ff 4c 89 e4 58 
1648: 59 5a 5b 41 5a 5f 5a 52 
1656: c3 e9 00 00 00 00 48 be 
1664: 00 00 00 00 00 00 00 00 
1672: 56 50 f2 0f 10 44 24 00 
1680: 48 83 c4 08 f2 48 0f 2d 
1688: f0 48 c1 e6 03 49 01 f2 
1696: 49 8b ba 38 00 00 00 57 
1704: 49 29 f2 f2 0f 10 44 24 
1712: 00 f2 0f 10 4c 24 08 48 
1720: 83 c4 10 66 0f 2e c1 0f 
1728: 87 |  00 00 00 50 f2 0f 
1736: 10 44 24 00 48 83 c4 08 
1744: f2 48 0f 2d f0 48 c1 e6 
1752: 03 49 01 f2 49 8b ba 30 
1760: 00 00 00 57 49 29 f2 f2 
1768: 0f 10 44 24 00 41 52 53 
1776: 52 51 50 49 89 e4 48 83 
1784: e4 f0 e8 8d 43 0c ff 4c 
1792: 89 e4 58 59 5a 5b 41 5a 
1800: 5f 50 f2 0f 10 44 24 00 
1808: 48 83 c4 08 f2 48 0f 2d 
1816: f0 48 c1 e6 03 49 01 f2 
1824: 49 8b ba 30 00 00 00 57 
1832: 49 29 f2 f2 0f 10 44 24 
1840: 00 41 52 53 52 51 50 49 
1848: 89 e4 48 83 e4 f0 e8 49 
1856: 43 0c ff 4c 89 e4 58 59 
1864: 5a 5b 41 5a 5f 5a 52 c3 
1872: e9 b4 02 00 00 48 be 00 
1880: 00 00 00 00 00 00 40 56 
1888: 50 f2 0f 10 44 24 00 48 
1896: 83 c4 08 f2 48 0f 2d f0 
1904: 48 c1 e6 03 49 01 f2 49 
1912: 8b ba 10 00 00 00 57 49 
1920: 29 f2 f2 0f 10 44 24 00 
1928: f2 0f 10 4c 24 08 48 83 
1936: c4 08 f2 0f 59 c1 f2 0f 
1944: 11 44 24 00 50 f2 0f 10 
1952: 44 24 00 48 83 c4 08 f2 
1960: 48 0f 2d f0 48 c1 e6 03 
1968: 49 01 f2 49 8b ba 18 00 
1976: 00 00 57 49 29 f2 48 be 
1984: 00 00 00 00 00 00 00 00 
1992: 56 f2 0f 10 44 24 00 f2 
2000: 0f 10 4c 24 08 48 83 c4 
2008: 08 f2 0f 5c c1 f2 0f 11 
2016: 44 24 00 50 f2 0f 10 44 
2024: 24 00 48 83 c4 08 f2 48 
2032: 0f 2d f0 48 c1 e6 03 49 
2040: 01 f2 49 8b ba 38 00 00 
2048: 00 57 49 29 f2 f2 0f 10 
2056: 44 24 00 66 0f 51 c0 f2 
2064: 0f 11 44 24 00 f2 0f 10 
2072: 44 24 00 f2 0f 10 4c 24 
2080: 08 48 83 c4 08 f2 0f 58 
2088: c1 f2 0f 11 44 24 00 f2 
2096: 0f 10 44 24 00 f2 0f 10 
2104: 4c 24 08 48 83 c4 08 f2 
2112: 0f 5e c1 f2 0f 11 44 24 
2120: 00 50 f2 0f 10 44 24 00 
2128: 48 83 c4 08 f2 48 0f 2d 
2136: f0 48 c1 e6 03 49 01 f2 
2144: 5f 49 89 ba 40 00 00 00 
2152: 49 29 f2 48 be 00 00 00 
2160: 00 00 00 00 40 56 50 f2 
2168: 0f 10 44 24 00 48 83 c4 
2176: 08 f2 48 0f 2d f0 48 c1 
2184: e6 03 49 01 f2 49 8b ba 
2192: 10 00 00 00 57 49 29 f2 
2200: f2 0f 10 44 24 00 f2 0f