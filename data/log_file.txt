Ip   8:
	Id: 17
	Yeah, it is jump
Ip  18:
	Id: 0
Ip  19:
	Id: 6
Ip  29:
	Id: 1
Ip  39:
	Id: 1
Ip  49:
	Id: 6
Ip  59:
	Id: 1
Ip  69:
	Id: 6
Ip  79:
	Id: 1
Ip  89:
	Id: 6
Ip  99:
	Id: 1
Ip 109:
	Id: 6
Ip 119:
	Id: 1
Ip 129:
	Id: 6
Ip 139:
	Id: 1
Ip 149:
	Id: 1
Ip 159:
	Id: 15
	Yeah, it is jump
Ip 169:
	Id: 1
Ip 179:
	Id: 1
Ip 189:
	Id: 15
	Yeah, it is jump
Ip 199:
	Id: 1
Ip 209:
	Id: 1
Ip 219:
	Id: 15
	Yeah, it is jump
Ip 229:
	Id: 1
Ip 239:
	Id: 7
Ip 240:
	Id: 6
Ip 250:
	Id: 1
Ip 260:
	Id: 18
Ip 261:
	Id: 9
	Yeah, it is jump
Ip 271:
	Id: 1
Ip 281:
	Id: 7
Ip 282:
	Id: 6
Ip 292:
	Id: 1
Ip 302:
	Id: 18
Ip 303:
	Id: 9
	Yeah, it is jump
Ip 313:
	Id: 1
Ip 323:
	Id: 1
Ip 333:
	Id: 1
Ip 343:
	Id: 4
Ip 344:
	Id: 5
Ip 345:
	Id: 6
Ip 355:
	Id: 1
Ip 365:
	Id: 7
Ip 366:
	Id: 6
Ip 376:
	Id: 1
Ip 386:
	Id: 18
Ip 387:
	Id: 9
	Yeah, it is jump
Ip 397:
	Id: 1
Ip 407:
	Id: 6
Ip 417:
	Id: 1
Ip 427:
	Id: 1
Ip 437:
	Id: 2
Ip 438:
	Id: 1
Ip 448:
	Id: 2
Ip 449:
	Id: 1
Ip 459:
	Id: 1
Ip 469:
	Id: 2
Ip 470:
	Id: 4
Ip 471:
	Id: 6
Ip 481:
	Id: 1
Ip 491:
	Id: 7
Ip 492:
	Id: 1
Ip 502:
	Id: 1
Ip 512:
	Id: 15
	Yeah, it is jump
Ip 522:
	Id: 1
Ip 532:
	Id: 1
Ip 542:
	Id: 2
Ip 543:
	Id: 1
Ip 553:
	Id: 1
Ip 563:
	Id: 4
Ip 564:
	Id: 5
Ip 565:
	Id: 6
Ip 575:
	Id: 1
Ip 585:
	Id: 7
Ip 586:
	Id: 6
Ip 596:
	Id: 1
Ip 606:
	Id: 18
Ip 607:
	Id: 9
	Yeah, it is jump
Ip 617:
	Id: 1
Ip 627:
	Id: 1
Ip 637:
	Id: 12
	Yeah, it is jump
Ip 647:
	Id: 1
Ip 657:
	Id: 7
Ip 658:
	Id: 1
Ip 668:
	Id: 7
Ip 669:
	Id: 6
Ip 679:
	Id: 1
Ip 689:
	Id: 18
Ip 690:
	Id: 9
	Yeah, it is jump
Ip 700:
	Id: 1
Ip 710:
	Id: 1
Ip 720:
	Id: 2
Ip 721:
	Id: 1
Ip 731:
	Id: 1
Ip 741:
	Id: 4
Ip 742:
	Id: 1
Ip 752:
	Id: 19
Ip 753:
	Id: 3
Ip 754:
	Id: 5
Ip 755:
	Id: 6
Ip 765:
	Id: 1
Ip 775:
	Id: 1
Ip 785:
	Id: 2
Ip 786:
	Id: 1
Ip 796:
	Id: 19
Ip 797:
	Id: 1
Ip 807:
	Id: 1
Ip 817:
	Id: 4
Ip 818:
	Id: 4
Ip 819:
	Id: 5
Ip 820:
	Id: 6
Ip 830:
	Id: 1
Ip 840:
	Id: 7
Ip 841:
	Id: 1
Ip 851:
	Id: 7
Ip 852:
	Id: 6
Ip 862:
	Id: 1
Ip 872:
	Id: 18
Ip 873:
End of prog.

================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 19

Command < HLT: 0 > | Native/x86 size: 1/7 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 397

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 313

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 271

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 303

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 387

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 417

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 617

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 617

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 700

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 852

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

================ End of struct dump ==================

Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics


---------- Filling labels --------

	Yeah, it is jump
 0: Trying to find x86 ip for ip 19:
	 Found, x86 ip is 12
	Yeah, it is jump
16: Trying to find x86 ip for ip 397:
	 Found, x86 ip is 866
	Yeah, it is jump
19: Trying to find x86 ip for ip 313:
	 Found, x86 ip is 618
	Yeah, it is jump
22: Trying to find x86 ip for ip 271:
	 Found, x86 ip is 535
	Yeah, it is jump
28: Trying to find x86 ip for ip 303:
	 Found, x86 ip is 613
	Yeah, it is jump
34: Trying to find x86 ip for ip 387:
	 Found, x86 ip is 861
	Yeah, it is jump
46: Trying to find x86 ip for ip 417:
	 Found, x86 ip is 911
	Yeah, it is jump
63: Trying to find x86 ip for ip 617:
	 Found, x86 ip is 1627
	Yeah, it is jump
77: Trying to find x86 ip for ip 617:
	 Found, x86 ip is 1627
	Yeah, it is jump
80: Trying to find x86 ip for ip 700:
	 Found, x86 ip is 1856
	Yeah, it is jump
88: Trying to find x86 ip for ip 852:
	 Found, x86 ip is 2562


---------- End filling labels --------


================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 12

Command < HLT: 0 > | Native/x86 size: 1/7 | x86 ip: 5

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 12
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 13
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 14
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 25
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 59
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 70
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 104
Checksum: 32
	+Operating width digit, value: 1

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 115
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 149
Checksum: 32
	+Operating width digit, value: 2

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 160
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 194
Checksum: 32
	+Operating width digit, value: 1

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 205
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 239
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 273
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 284
	Yeah, it is jump
	+Wants to jump into 866

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 310
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 344
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 355
	Yeah, it is jump
	+Wants to jump into 618

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 381
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 415
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 426
	Yeah, it is jump
	+Wants to jump into 535

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 452
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 486

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 527
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 528
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 529

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 530
	Yeah, it is jump
	+Wants to jump into 613

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 535
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 569

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 610
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 611
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 612

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 613
	Yeah, it is jump
	+Wants to jump into 861

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 618
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 652
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 686
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 697

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 723

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 749
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 783
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 817

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 858
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 859
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 860

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 861
	Yeah, it is jump
	+Wants to jump into 911

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 866
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 877
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 911
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 922
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 956

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 982
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1016

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1042
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1076
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1110

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1136

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1162
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1196
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1230

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1271
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1305
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 1316
	Yeah, it is jump
	+Wants to jump into 1627

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1342
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1376
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1387

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1413
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1447
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1458

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 1484

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1510
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1544
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1578

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1619
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1620
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1621

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1622
	Yeah, it is jump
	+Wants to jump into 1627

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1627
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1638
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 1672
	Yeah, it is jump
	+Wants to jump into 1856

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1698
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1732

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1773
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1807

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1848
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1849
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1850

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1851
	Yeah, it is jump
	+Wants to jump into 2562

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1856
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1867
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1901

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1927
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1961
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1972

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1998
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 2032

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 2048

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2074

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2100
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2134
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2145
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 2179

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2205
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 2239

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2255
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2289
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2300

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2326

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2352

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2378
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2412
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 2446

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2487
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 2521

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 2562
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 2563
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 2564

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating exit()

##########
	 0: 6a 3c 58 31 ff 0f 05 
##########

12:Push/Pop REG

##########
	 0: 5a 
##########

13:Push/Pop REG

##########
	 0: 52 
##########

<14>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<59>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<104>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<149>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<194>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<273>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

16: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<344>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

19: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<415>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

22: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

527:Push/Pop REG

##########
	 0: 5a 
##########

528:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

610:Push/Pop REG

##########
	 0: 5a 
##########

611:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<686>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

38: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

39: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

858:Push/Pop REG

##########
	 0: 5a 
##########

859:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<866>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<911>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

51: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

53: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

56: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

57: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1305>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

63: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1376>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

66: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1447>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

69: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

70: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1619:Push/Pop REG

##########
	 0: 5a 
##########

1620:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1627>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

80: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 87 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1848:Push/Pop REG

##########
	 0: 5a 
##########

1849:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1856>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

91: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1961>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

94: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

97: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 58 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

98: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<2134>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

102: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<2289>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

107: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

108: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

109: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

2562:Push/Pop REG

##########
	 0: 5a 
##########

2563:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba e8 17 40 00 00 00 
 8: 00 00 e8 07 00 00 00 6a 
16: 3c 58 31 ff 0f 05 5a 52 
24: 48 be 00 00 00 00 00 b4 
32: ad 40 56 50 f2 0f 10 44 
40: 24 00 48 83 c4 08 f2 48 
48: 0f 2d f0 48 c1 e6 03 49 
56: 01 f2 5f 49 89 ba 00 00 
64: 00 00 49 29 f2 48 be 00 
72: 00 00 00 00 46 a0 40 56 
80: 50 f2 0f 10 44 24 00 48 
88: 83 c4 08 f2 48 0f 2d f0 
96: 48 c1 e6 03 49 01 f2 5f 
104: 49 89 ba 08 00 00 00 49 
112: 29 f2 48 be 00 00 00 00 
120: 00 00 f0 3f 56 50 f2 0f 
128: 10 44 24 00 48 83 c4 08 
136: f2 48 0f 2d f0 48 c1 e6 
144: 03 49 01 f2 5f 49 89 ba 
152: 10 00 00 00 49 29 f2 48 
160: be 00 00 00 00 00 00 00 
168: 40 56 50 f2 0f 10 44 24 
176: 00 48 83 c4 08 f2 48 0f 
184: 2d f0 48 c1 e6 03 49 01 
192: f2 5f 49 89 ba 18 00 00 
200: 00 49 29 f2 48 be 00 00 
208: 00 00 00 00 f0 3f 56 50 
216: f2 0f 10 44 24 00 48 83 
224: c4 08 f2 48 0f 2d f0 48 
232: c1 e6 03 49 01 f2 5f 49 
240: 89 ba 20 00 00 00 49 29 
248: f2 50 f2 0f 10 44 24 00 
256: 48 83 c4 08 f2 48 0f 2d 
264: f0 48 c1 e6 03 49 01 f2 
272: 49 8b ba 10 00 00 00 57 
280: 49 29 f2 48 be 00 00 00 
288: 00 00 00 00 00 56 f2 0f 
296: 10 44 24 00 f2 0f 10 4c 
304: 24 08 48 83 c4 10 66 0f 
312: 2e c1 0f 85 2c 02 00 00 
320: 50 f2 0f 10 44 24 00 48 
328: 83 c4 08 f2 48 0f 2d f0 
336: 48 c1 e6 03 49 01 f2 49 
344: 8b ba 18 00 00 00 57 49 
352: 29 f2 48 be 00 00 00 00 
360: 00 00 00 00 56 f2 0f 10 
368: 44 24 00 f2 0f 10 4c 24 
376: 08 48 83 c4 10 66 0f 2e 
384: c1 0f 85 ed 00 00 00 50 
392: f2 0f 10 44 24 00 48 83 
400: c4 08 f2 48 0f 2d f0 48 
408: c1 e6 03 49 01 f2 49 8b 
416: ba 20 00 00 00 57 49 29 
424: f2 48 be 00 00 00 00 00 
432: 00 00 00 56 f2 0f 10 44 
440: 24 00 f2 0f 10 4c 24 08 
448: 48 83 c4 10 66 0f 2e c1 
456: 0f 85 53 00 00 00 50 f2 
464: 0f 10 44 24 00 48 83 c4 
472: 08 f2 48 0f 2d f0 48 c1 
480: e6 03 49 01 f2 49 8b ba 
488: 08 00 00 00 57 49 29 f2 
496: f2 0f 10 44 24 00 f2 48 
504: 0f 2d f0 56 58 41 52 53 
512: 52 51 50 49 89 e4 48 83 
520: e4 f0 e8 00 08 00 00 4c 
528: 89 e4 58 59 5a 5b 41 5a 
536: 5f 5a 52 c3 e9 4e 00 00 
544: 00 50 f2 0f 10 44 24 00 
552: 48 83 c4 08 f2 48 0f 2d 
560: f0 48 c1 e6 03 49 01 f2 
568: 49 8b ba 00 00 00 00 57 
576: 49 29 f2 f2 0f 10 44 24 
584: 00 f2 48 0f 2d f0 56 58 
592: 41 52 53 52 51 50 49 89 
600: e4 48 83 e4 f0 e8 ad 07 
608: 00 00 4c 89 e4 58 59 5a 
616: 5b 41 5a 5f 5a 52 c3 e9 
624: f3 00 00 00 50 f2 0f 10 
632: 44 24 00 48 83 c4 08 f2 
640: 48 0f 2d f0 48 c1 e6 03 
648: 49 01 f2 49 8b ba 18 00 
656: 00 00 57 49 29 f2 50 f2 
664: 0f 10 44 24 00 48 83 c4 
672: 08 f2 48 0f 2d f0 48 c1 
680: e6 03 49 01 f2 49 8b ba 
688: 20 00 00 00 57 49 29 f2 
696: 48 be 00 00 00 00 00 00 
704: 00 00 56 f2 0f 10 44 24 
712: 00 f2 0f 10 4c 24 08 48 
720: 83 c4 08 f2 0f 5c c1 f2 
728: 0f 11 44 24 00 f2 0f 10 
736: 44 24 00 f2 0f 10 4c 24 
744: 08 48 83 c4 08 f2 0f 5e 
752: c1 f2 0f 11 44 24 00 50 
760: f2 0f 10 44 24 00 48 83 
768: c4 08 f2 48 0f 2d f0 48 
776: c1 e6 03 49 01 f2 5f 49 
784: 89 ba 28 00 00 00 49 29 
792: f2 50 f2 0f 10 44 24 00 
800: 48 83 c4 08 f2 48 0f 2d 
808: f0 48 c1 e6 03 49 01 f2 
816: 49 8b ba 28 00 00 00 57 
824: 49 29 f2 f2 0f 10 44 24 
832: 00 f2 48 0f 2d f0 56 58 
840: 41 52 53 52 51 50 49 89 
848: e4 48 83 e4 f0 e8 b5 06 
856: 00 00 4c 89 e4 58 59 5a 
864: 5b 41 5a 5f 5a 52 c3 e9 
872: 2d 00 00 00 48 be 00 00 
880: 00 00 00 e4 94 40 56 50 
888: f2 0f 10 44 24 00 48 83 
896: c4 08 f2 48 0f 2d f0 48 
904: c1 e6 03 49 01 f2 5f 49 
912: 89 ba 30 00 00 00 49 29 
920: f2 48 be 00 00 00 00 00 
928: 00 10 40 56 50 f2 0f 10 
936: 44 24 00 48 83 c4 08 f2 
944: 48 0f 2d f0 48 c1 e6 03 
952: 49 01 f2 49 8b ba 10 00 
960: 00 00 57 49 29 f2 f2 0f 
968: 10 44 24 00 f2 0f 10 4c 
976: 24 08 48 83 c4 08 f2 0f 
984: 59 c1 f2 0f 11 44 24 00 
992: 50 f2 0f 10 44 24 00 48 
1000: 83 c4 08 f2 48 0f 2d f0 
1008: 48 c1 e6 03 49 01 f2 49 
1016: 8b ba 20 00 00 00 57 49 
1024: 29 f2 f2 0f 10 44 24 00 
1032: f2 0f 10 4c 24 08 48 83 
1040: c4 08 f2 0f 59 c1 f2 0f 
1048: 11 44 24 00 50 f2 0f 10 
1056: 44 24 00 48 83 c4 08 f2 
1064: 48 0f 2d f0 48 c1 e6 03 
1072: 49 01 f2 49 8b ba 18 00 
1080: 00 00 57 49 29 f2 50 f2 
1088: 0f 10 44 24 00 48 83 c4 
1096: 08 f2 48 0f 2d f0 48 c1 
1104: e6 03 49 01 f2 49 8b ba 
1112: 18 00 00 00 57 49 29 f2 
1120: f2 0f 10 44 24 00 f2 0f 
1128: 10 4c 24 08 48 83 c4 08 
1136: f2 0f 59 c1 f2 0f 11 44 
1144: 24 00 f2 0f 10 44 24 00 
1152: f2 0f 10 4c 24 08 48 83 
1160: c4 08 f2 0f 5c c1 f2 0f 
1168: 11 44 24 00 50 f2 0f 10 
1176: 44 24 00 48 83 c4 08 f2 
1184: 48 0f 2d f0 48 c1 e6 03 
1192: 49 01 f2 5f 49 89 ba 38 
1200: 00 00 00 49 29 f2 50 f2 
1208: 0f 10 44 24 00 48 83 c4 
1216: 08 f2 48 0f 2d f0 48 c1 
1224: e6 03 49 01 f2 49 8b ba 
1232: 38 00 00 00 57 49 29 f2 
1240: f2 0f 10 44 24 00 f2 48 
1248: 0f 2d f0 56 58 41 52 53 
1256: 52 51 50 49 89 e4 48 83 
1264: e4 f0 e8 18 05 00 00 4c 
1272: 89 e4 58 59 5a 5b 41 5a 
1280: 5f 50 f2 0f 10 44 24 00 
1288: 48 83 c4 08 f2 48 0f 2d 
1296: f0 48 c1 e6 03 49 01 f2 
1304: 49 8b ba 38 00 00 00 57 
1312: 49 29 f2 48 be 00 00 00 
1320: 00 00 00 00 00 56 f2 0f 
1328: 10 44 24 00 f2 0f 10 4c 
1336: 24 08 48 83 c4 10 66 0f 
1344: 2e c1 0f 85 1d 01 00 00 
1352: 50 f2 0f 10 44 24 00 48 
1360: 83 c4 08 f2 48 0f 2d f0 
1368: 48 c1 e6 03 49 01 f2 49 
1376: 8b ba 10 00 00 00 57 49 
1384: 29 f2 48 be 00 00 00 00 
1392: 00 00 00 40 56 f2 0f 10 
1400: 44 24 00 f2 0f 10 4c 24 
1408: 08 48 83 c4 08 f2 0f 59 
1416: c1 f2 0f 11 44 24 00 50 
1424: f2 0f 10 44 24 00 48 83 
1432: c4 08 f2 48 0f 2d f0 48 
1440: c1 e6 03 49 01 f2 49 8b 
1448: ba 18 00 00 00 57 49 29 
1456: f2 48 be 00 00 00 00 00 
1464: 00 00 00 56 f2 0f 10 44 
1472: 24 00 f2 0f 10 4c 24 08 
1480: 48 83 c4 08 f2 0f 5c c1 
1488: f2 0f 11 44 24 00 f2 0f 
1496: 10 44 24 00 f2 0f 10 4c 
1504: 24 08 48 83 c4 08 f2 0f 
1512: 5e c1 f2 0f 11 44 24 00 
1520: 50 f2 0f 10 44 24 00 48 
1528: 83 c4 08 f2 48 0f 2d f0 
1536: 48 c1 e6 03 49 01 f2 5f 
1544: 49 89 ba 28 00 00 00 49 
1552: 29 f2 50 f2 0f 10 44 24 
1560: 00 48 83 c4 08 f2 48 0f 
1568: 2d f0 48 c1 e6 03 49 01 
1576: f2 49 8b ba 28 00 00 00 
1584: 57 49 29 f2 f2 0f 10 44 
1592: 24 00 f2 48 0f 2d f0 56 
1600: 58 41 52 53 52 51 50 49 
1608: 89 e4 48 83 e4 f0 e8 bc 
1616: 03 00 00 4c 89 e4 58 59 
1624: 5a 5b 41 5a 5f 5a 52 c3 
1632: e9 00 00 00 00 48 be 00 
1640: 00 00 00 00 00 00 00 56 
1648: 50 f2 0f 10 44 24 00 48 
1656: 83 c4 08 f2 48 0f 2d f0 
1664: 48 c1 e6 03 49 01 f2 49 
1672: 8b ba 38 00 00 00 57 49 
1680: 29 f2 f2 0f 10 44 24 00 
1688: f2 0f 10 4c 24 08 48 83 
1696: c4 10 66 0f 2e c1 0f 87 
1704: 9e 00 00 00 50 f2 0f 10 
1712: 44 24 00 48 83 c4 08 f2 
1720: 48 0f 2d f0 48 c1 e6 03 
1728: 49 01 f2 49 8b ba 30 00 
1736: 00 00 57 49 29 f2 f2 0f 
1744: 10 44 24 00 f2 48 0f 2d 
1752: f0 56 58 41 52 53 52 51 
1760: 50 49 89 e4 48 83 e4 f0 
1768: e8 22 03 00 00 4c 89 e4 
1776: 58 59 5a 5b 41 5a 5f 50 
1784: f2 0f 10 44 24 00 48 83 
1792: c4 08 f2 48 0f 2d f0 48 
1800: c1 e6 03 49 01 f2 49 8b 
1808: ba 30 00 00 00 57 49 29 
1816: f2 f2 0f 10 44 24 00 f2 
1824: 48 0f 2d f0 56 58 41 52 
1832: 53 52 51 50 49 89 e4 48 
1840: 83 e4 f0 e8 d7 02 00 00 
1848: 4c 89 e4 58 59 5a 5b 41 
1856: 5a 5f 5a 52 c3 e9 c2 02 
1864: 00 00 48 be 00 00 00 00 
1872: 00 00 00 40 56 50 f2 0f 
1880: 10 44 24 00 48 83 c4 08 
1888: f2 48 0f 2d f0 48 c1 e6 
1896: 03 49 01 f2 49 8b ba 10 
1904: 00 00 00 57 49 29 f2 f2 
1912: 0f 10 44 24 00 f2 0f 10 
1920: 4c 24 08 48 83 c4 08 f2 
1928: 0f 59 c1 f2 0f 11 44 24 
1936: 00 50 f2 0f 10 44 24 00 
1944: 48 83 c4 08 f2 48 0f 2d 
1952: f0 48 c1 e6 03 49 01 f2 
1960: 49 8b ba 18 00 00 00 57 
1968: 49 29 f2 48 be 00 00 00 
1976: 00 00 00 00 00 56 f2 0f 
1984: 10 44 24 00 f2 0f 10 4c 
1992: 24 08 48 83 c4 08 f2 0f 
2000: 5c c1 f2 0f 11 44 24 00 
2008: 50 f2 0f 10 44 24 00 48 
2016: 83 c4 08 f2 48 0f 2d f0 
2024: 48 c1 e6 03 49 01 f2 49 
2032: 8b ba 38 00 00 00 57 49 
2040: 29 f2 f2 0f 10 44 24 00 
2048: 66 0f 51 c0 f2 0f 11 44 
2056: 24 00 f2 0f 10 44 24 00 
2064: f2 0f 10 4c 24 08 48 83 
2072: c4 08 f2 0f 58 c1 f2 0f 
2080: 11 44 24 00 f2 0f 10 44 
2088: 24 00 f2 0f 10 4c 24 08 
2096: 48 83 c4 08 f2 0f 5e c1 
2104: f2 0f 11 44 24 00 50 f2 
2112: 0f 10 44 24 00 48 83 c4 
2120: 08 f2 48 0f 2d f0 48 c1 
2128: e6 03 49 01 f2 5f 49 89 
2136: ba 40 00 00 00 49 29 f2 
2144: 48 be 00 00 00 00 00 00 
2152: 00 40 56 50 f2 0f 10 44 
2160: 24 00 48 83 c4 08 f2 48 
2168: 0f 2d f0 48 c1 e6 03 49 
2176: 01 f2 49 8b ba 10 00 00 
2184: 00 57 49 29 f2 f2 0f 10 
2192: 44 24 00 f2 0f 10 4c 24 
2200: 08 48 83 c4 08 f2 0f 59 
2208: c1 f2 0f 11 44 24 00 50 
2216: f2 0f 10 44 24 00 48 83 
2224: c4 08 f2 48 0f 2d f0 48 
2232: c1 e6 03 49 01 f2 49 8b 
2240: ba 38 00 00 00 57 49 29 
2248: f2 f2 0f 10 44 24 00 66 
2256: 0f 51 c0 f2 0f 11 44 24 
2264: 00 50 f2 0f 10 44 24 00 
2272: 48 83 c4 08 f2 48 0f 2d 
2280: f0 48 c1 e6 03 49 01 f2 
2288: 49 8b ba 18 00 00 00 57 
2296: 49 29 f2 48 be 00 00 00 
2304: 00 00 00 00 00 56 f2 0f 
2312: 10 44 24 00 f2 0f 10 4c 
2320: 24 08 48 83 c4 08 f2 0f 
2328: 5c c1 f2 0f 11 44 24 00 
2336: f2 0f 10 44 24 00 f2 0f 
2344: 10 4c 24 08 48 83 c4 08 
2352: f2 0f 5c c1 f2 0f 11 44 
2360: 24 00 f2 0f 10 44 24 00 
2368: f2 0f 10 4c 24 08 48 83 
2376: c4 08 f2 0f 5e c1 f2 0f 
2384: 11 44 24 00 50 f2 0f 10 
2392: 44 24 00 48 83 c4 08 f2 
2400: 48 0f 2d f0 48 c1 e6 03 
2408: 49 01 f2 5f 49 89 ba 48 
2416: 00 00 00 49 29 f2 50 f2 
2424: 0f 10 44 24 00 48 83 c4 
2432: 08 f2 48 0f 2d f0 48 c1 
2440: e6 03 49 01 f2 49 8b ba 
2448: 40 00 00 00 57 49 29 f2 
2456: f2 0f 10 44 24 00 f2 48 
2464: 0f 2d f0 56 58 41 52 53 
2472: 52 51 50 49 89 e4 48 83 
2480: e4 f0 e8 58 00 00 00 4c 
2488: 89 e4 58 59 5a 5b 41 5a 
2496: 5f 50 f2 0f 10 44 24 00 
2504: 48 83 c4 08 f2 48 0f 2d 
2512: f0 48 c1 e6 03 49 01 f2 
2520: 49 8b ba 48 00 00 00 57 
2528: 49 29 f2 f2 0f 10 44 24 
2536: 00 f2 48 0f 2d f0 56 58 
2544: 41 52 53 52 51 50 49 89 
2552: e4 48 83 e4 f0 e8 0d 00 
2560: 00 00 4c 89 e4 58 59 5a 
2568: 5b 41 5a 5f 5a 52 c3 00 

====== x86 buffer dump end =======

