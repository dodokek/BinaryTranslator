Ip   8:
	Id: 17
	Yeah, it is jump
Ip  18:
	Id: 18
Ip  19:
	Id: 6
Ip  29:
	Id: 1
Ip  39:
	Id: 1
Ip  49:
	Id: 6
Ip  59:
	Id: 1
Ip  69:
	Id: 6
Ip  79:
	Id: 1
Ip  89:
	Id: 6
Ip  99:
	Id: 1
Ip 109:
	Id: 6
Ip 119:
	Id: 1
Ip 129:
	Id: 6
Ip 139:
	Id: 1
Ip 149:
	Id: 1
Ip 159:
	Id: 15
	Yeah, it is jump
Ip 169:
	Id: 1
Ip 179:
	Id: 1
Ip 189:
	Id: 15
	Yeah, it is jump
Ip 199:
	Id: 1
Ip 209:
	Id: 1
Ip 219:
	Id: 15
	Yeah, it is jump
Ip 229:
	Id: 1
Ip 239:
	Id: 7
Ip 240:
	Id: 6
Ip 250:
	Id: 1
Ip 260:
	Id: 18
Ip 261:
	Id: 9
	Yeah, it is jump
Ip 271:
	Id: 1
Ip 281:
	Id: 7
Ip 282:
	Id: 6
Ip 292:
	Id: 1
Ip 302:
	Id: 18
Ip 303:
	Id: 9
	Yeah, it is jump
Ip 313:
	Id: 1
Ip 323:
	Id: 1
Ip 333:
	Id: 1
Ip 343:
	Id: 4
Ip 344:
	Id: 5
Ip 345:
	Id: 6
Ip 355:
	Id: 1
Ip 365:
	Id: 7
Ip 366:
	Id: 6
Ip 376:
	Id: 1
Ip 386:
	Id: 18
Ip 387:
	Id: 9
	Yeah, it is jump
Ip 397:
	Id: 1
Ip 407:
	Id: 6
Ip 417:
	Id: 1
Ip 427:
	Id: 1
Ip 437:
	Id: 2
Ip 438:
	Id: 1
Ip 448:
	Id: 2
Ip 449:
	Id: 1
Ip 459:
	Id: 1
Ip 469:
	Id: 2
Ip 470:
	Id: 4
Ip 471:
	Id: 6
Ip 481:
	Id: 1
Ip 491:
	Id: 7
Ip 492:
	Id: 1
Ip 502:
	Id: 1
Ip 512:
	Id: 15
	Yeah, it is jump
Ip 522:
	Id: 1
Ip 532:
	Id: 1
Ip 542:
	Id: 2
Ip 543:
	Id: 1
Ip 553:
	Id: 1
Ip 563:
	Id: 4
Ip 564:
	Id: 5
Ip 565:
	Id: 6
Ip 575:
	Id: 1
Ip 585:
	Id: 7
Ip 586:
	Id: 6
Ip 596:
	Id: 1
Ip 606:
	Id: 18
Ip 607:
	Id: 9
	Yeah, it is jump
Ip 617:
	Id: 1
Ip 627:
	Id: 1
Ip 637:
	Id: 12
	Yeah, it is jump
Ip 647:
	Id: 1
Ip 657:
	Id: 7
Ip 658:
	Id: 1
Ip 668:
	Id: 7
Ip 669:
	Id: 6
Ip 679:
	Id: 1
Ip 689:
	Id: 18
Ip 690:
	Id: 9
	Yeah, it is jump
Ip 700:
	Id: 1
Ip 710:
	Id: 1
Ip 720:
	Id: 2
Ip 721:
	Id: 1
Ip 731:
	Id: 1
Ip 741:
	Id: 4
Ip 742:
	Id: 1
Ip 752:
	Id: 19
Ip 753:
	Id: 3
Ip 754:
	Id: 5
Ip 755:
	Id: 6
Ip 765:
	Id: 1
Ip 775:
	Id: 1
Ip 785:
	Id: 2
Ip 786:
	Id: 1
Ip 796:
	Id: 19
Ip 797:
	Id: 1
Ip 807:
	Id: 1
Ip 817:
	Id: 4
Ip 818:
	Id: 4
Ip 819:
	Id: 5
Ip 820:
	Id: 6
Ip 830:
	Id: 1
Ip 840:
	Id: 7
Ip 841:
	Id: 1
Ip 851:
	Id: 7
Ip 852:
	Id: 6
Ip 862:
	Id: 1
Ip 872:
	Id: 18
Ip 873:
End of prog.

================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 19

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 4

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 3

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 397

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 313

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 271

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 303

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 387

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 417

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 617

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 617

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 700

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 852

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

================ End of struct dump ==================

Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics


---------- Filling labels --------

	Yeah, it is jump
 0: Trying to find x86 ip for ip 19:
	 Found, x86 ip is 6
	Yeah, it is jump
16: Trying to find x86 ip for ip 397:
	 Found, x86 ip is 839
	Yeah, it is jump
19: Trying to find x86 ip for ip 313:
	 Found, x86 ip is 598
	Yeah, it is jump
22: Trying to find x86 ip for ip 271:
	 Found, x86 ip is 522
	Yeah, it is jump
28: Trying to find x86 ip for ip 303:
	 Found, x86 ip is 593
	Yeah, it is jump
34: Trying to find x86 ip for ip 387:
	 Found, x86 ip is 834
	Yeah, it is jump
46: Trying to find x86 ip for ip 417:
	 Found, x86 ip is 884
	Yeah, it is jump
63: Trying to find x86 ip for ip 617:
	 Found, x86 ip is 1586
	Yeah, it is jump
77: Trying to find x86 ip for ip 617:
	 Found, x86 ip is 1586
	Yeah, it is jump
80: Trying to find x86 ip for ip 700:
	 Found, x86 ip is 1801
	Yeah, it is jump
88: Trying to find x86 ip for ip 852:
	 Found, x86 ip is 2493


---------- End filling labels --------


================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 6

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 5

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 6
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 7
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 8
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 19
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 53
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 64
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 98
Checksum: 32
	+Operating width digit, value: 1

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 109
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 143
Checksum: 32
	+Operating width digit, value: 4

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 154
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 188
Checksum: 32
	+Operating width digit, value: 3

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 199
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 233
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 267
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 278
	Yeah, it is jump
	+Wants to jump into 839

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 304
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 338
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 349
	Yeah, it is jump
	+Wants to jump into 598

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 375
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 409
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 420
	Yeah, it is jump
	+Wants to jump into 522

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 446
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 480

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 514
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 515
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 516

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 517
	Yeah, it is jump
	+Wants to jump into 593

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 522
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 556

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 590
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 591
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 592

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 593
	Yeah, it is jump
	+Wants to jump into 834

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 598
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 632
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 666
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 677

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 703

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 729
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 763
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 797

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 831
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 832
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 833

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 834
	Yeah, it is jump
	+Wants to jump into 884

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 839
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 850
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 884
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 895
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 929

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 955
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 989

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1015
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1049
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1083

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1109

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1135
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1169
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1203

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1237
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1271
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 1282
	Yeah, it is jump
	+Wants to jump into 1586

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1308
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1342
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1353

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1379
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1413
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1424

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 1450

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1476
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1510
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1544

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1578
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1579
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1580

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1581
	Yeah, it is jump
	+Wants to jump into 1586

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1586
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1597
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 1631
	Yeah, it is jump
	+Wants to jump into 1801

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1657
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1691

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1725
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 1759

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1793
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1794
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1795

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1796
	Yeah, it is jump
	+Wants to jump into 2493

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1801
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1812
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1846

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1872
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1906
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1917

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1943
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 1977

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 1993

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2019

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2045
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2079
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2090
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 2124

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2150
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 2184

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2200
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2234
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2245

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2271

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2297

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2323
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2357
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 2391

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2425
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/34 | x86 ip: 2459

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 2493
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 2494
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 2495

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating RET
##########
	 0: c3 
##########

6:Push/Pop REG

##########
	 0: 5a 
##########

7:Push/Pop REG

##########
	 0: 52 
##########

<8>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<53>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<98>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<143>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<188>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<267>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

16: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<338>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

19: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<409>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

22: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

514:Push/Pop REG

##########
	 0: 5a 
##########

515:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

590:Push/Pop REG

##########
	 0: 5a 
##########

591:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<666>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

38: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

39: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

831:Push/Pop REG

##########
	 0: 5a 
##########

832:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<839>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<884>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

51: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

53: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

56: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

57: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1271>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

63: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1342>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

66: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1413>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

69: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

70: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1578:Push/Pop REG

##########
	 0: 5a 
##########

1579:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1586>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

80: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 87 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1793:Push/Pop REG

##########
	 0: 5a 
##########

1794:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1801>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

91: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1906>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

94: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

97: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 58 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

98: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<2079>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

102: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<2234>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

107: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

108: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

109: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

2493:Push/Pop REG

##########
	 0: 5a 
##########

2494:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########


##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba 00 20 36 02 00 00 
 8: 00 00 e8 01 00 00 00 c3 
16: 5a 52 48 be 00 00 00 00 
24: 00 b4 ad 40 56 50 f2 0f 
32: 10 44 24 00 48 83 c4 08 
40: f2 48 0f 2d f0 48 c1 e6 
48: 03 49 01 f2 5f 49 89 ba 
56: 00 00 00 00 49 29 f2 48 
64: be 00 00 00 00 00 46 a0 
72: 40 56 50 f2 0f 10 44 24 
80: 00 48 83 c4 08 f2 48 0f 
88: 2d f0 48 c1 e6 03 49 01 
96: f2 5f 49 89 ba 08 00 00 
104: 00 49 29 f2 48 be 00 00 
112: 00 00 00 00 f0 3f 56 50 
120: f2 0f 10 44 24 00 48 83 
128: c4 08 f2 48 0f 2d f0 48 
136: c1 e6 03 49 01 f2 5f 49 
144: 89 ba 10 00 00 00 49 29 
152: f2 48 be 00 00 00 00 00 
160: 00 10 40 56 50 f2 0f 10 
168: 44 24 00 48 83 c4 08 f2 
176: 48 0f 2d f0 48 c1 e6 03 
184: 49 01 f2 5f 49 89 ba 18 
192: 00 00 00 49 29 f2 48 be 
200: 00 00 00 00 00 00 08 40 
208: 56 50 f2 0f 10 44 24 00 
216: 48 83 c4 08 f2 48 0f 2d 
224: f0 48 c1 e6 03 49 01 f2 
232: 5f 49 89 ba 20 00 00 00 
240: 49 29 f2 50 f2 0f 10 44 
248: 24 00 48 83 c4 08 f2 48 
256: 0f 2d f0 48 c1 e6 03 49 
264: 01 f2 49 8b ba 10 00 00 
272: 00 57 49 29 f2 48 be 00 
280: 00 00 00 00 00 00 00 56 
288: f2 0f 10 44 24 00 f2 0f 
296: 10 4c 24 08 48 83 c4 10 
304: 66 0f 2e c1 0f 85 17 02 
312: 00 00 50 f2 0f 10 44 24 
320: 00 48 83 c4 08 f2 48 0f 
328: 2d f0 48 c1 e6 03 49 01 
336: f2 49 8b ba 18 00 00 00 
344: 57 49 29 f2 48 be 00 00 
352: 00 00 00 00 00 00 56 f2 
360: 0f 10 44 24 00 f2 0f 10 
368: 4c 24 08 48 83 c4 10 66 
376: 0f 2e c1 0f 85 df 00 00 
384: 00 50 f2 0f 10 44 24 00 
392: 48 83 c4 08 f2 48 0f 2d 
400: f0 48 c1 e6 03 49 01 f2 
408: 49 8b ba 20 00 00 00 57 
416: 49 29 f2 48 be 00 00 00 
424: 00 00 00 00 00 56 f2 0f 
432: 10 44 24 00 f2 0f 10 4c 
440: 24 08 48 83 c4 10 66 0f 
448: 2e c1 0f 85 4c 00 00 00 
456: 50 f2 0f 10 44 24 00 48 
464: 83 c4 08 f2 48 0f 2d f0 
472: 48 c1 e6 03 49 01 f2 49 
480: 8b ba 08 00 00 00 57 49 
488: 29 f2 f2 0f 10 44 24 00 
496: 41 52 53 52 51 50 49 89 
504: e4 48 83 e4 f0 e8 ca 18 
512: 0a fe 4c 89 e4 58 59 5a 
520: 5b 41 5a 5f 5a 52 c3 e9 
528: 47 00 00 00 50 f2 0f 10 
536: 44 24 00 48 83 c4 08 f2 
544: 48 0f 2d f0 48 c1 e6 03 
552: 49 01 f2 49 8b ba 00 00 
560: 00 00 57 49 29 f2 f2 0f 
568: 10 44 24 00 41 52 53 52 
576: 51 50 49 89 e4 48 83 e4 
584: f0 e8 7e 18 0a fe 4c 89 
592: e4 58 59 5a 5b 41 5a 5f 
600: 5a 52 c3 e9 ec 00 00 00 
608: 50 f2 0f 10 44 24 00 48 
616: 83 c4 08 f2 48 0f 2d f0 
624: 48 c1 e6 03 49 01 f2 49 
632: 8b ba 18 00 00 00 57 49 
640: 29 f2 50 f2 0f 10 44 24 
648: 00 48 83 c4 08 f2 48 0f 
656: 2d f0 48 c1 e6 03 49 01 
664: f2 49 8b ba 20 00 00 00 
672: 57 49 29 f2 48 be 00 00 
680: 00 00 00 00 00 00 56 f2 
688: 0f 10 44 24 00 f2 0f 10 
696: 4c 24 08 48 83 c4 08 f2 
704: 0f 5c c1 f2 0f 11 44 24 
712: 00 f2 0f 10 44 24 00 f2 
720: 0f 10 4c 24 08 48 83 c4 
728: 08 f2 0f 5e c1 f2 0f 11 
736: 44 24 00 50 f2 0f 10 44 
744: 24 00 48 83 c4 08 f2 48 
752: 0f 2d f0 48 c1 e6 03 49 
760: 01 f2 5f 49 89 ba 28 00 
768: 00 00 49 29 f2 50 f2 0f 
776: 10 44 24 00 48 83 c4 08 
784: f2 48 0f 2d f0 48 c1 e6 
792: 03 49 01 f2 49 8b ba 28 
800: 00 00 00 57 49 29 f2 f2 
808: 0f 10 44 24 00 41 52 53 
816: 52 51 50 49 89 e4 48 83 
824: e4 f0 e8 8d 17 0a fe 4c 
832: 89 e4 58 59 5a 5b 41 5a 
840: 5f 5a 52 c3 e9 2d 00 00 
848: 00 48 be 00 00 00 00 00 
856: e4 94 40 56 50 f2 0f 10 
864: 44 24 00 48 83 c4 08 f2 
872: 48 0f 2d f0 48 c1 e6 03 
880: 49 01 f2 5f 49 89 ba 30 
888: 00 00 00 49 29 f2 48 be 
896: 00 00 00 00 00 00 10 40 
904: 56 50 f2 0f 10 44 24 00 
912: 48 83 c4 08 f2 48 0f 2d 
920: f0 48 c1 e6 03 49 01 f2 
928: 49 8b ba 10 00 00 00 57 
936: 49 29 f2 f2 0f 10 44 24 
944: 00 f2 0f 10 4c 24 08 48 
952: 83 c4 08 f2 0f 59 c1 f2 
960: 0f 11 44 24 00 50 f2 0f 
968: 10 44 24 00 48 83 c4 08 
976: f2 48 0f 2d f0 48 c1 e6 
984: 03 49 01 f2 49 8b ba 20 
992: 00 00 00 57 49 29 f2 f2 
1000: 0f 10 44 24 00 f2 0f 10 
1008: 4c 24 08 48 83 c4 08 f2 
1016: 0f 59 c1 f2 0f 11 44 24 
1024: 00 50 f2 0f 10 44 24 00 
1032: 48 83 c4 08 f2 48 0f 2d 
1040: f0 48 c1 e6 03 49 01 f2 
1048: 49 8b ba 18 00 00 00 57 
1056: 49 29 f2 50 f2 0f 10 44 
1064: 24 00 48 83 c4 08 f2 48 
1072: 0f 2d f0 48 c1 e6 03 49 
1080: 01 f2 49 8b ba 18 00 00 
1088: 00 57 49 29 f2 f2 0f 10 
1096: 44 24 00 f2 0f 10 4c 24 
1104: 08 48 83 c4 08 f2 0f 59 
1112: c1 f2 0f 11 44 24 00 f2 
1120: 0f 10 44 24 00 f2 0f 10 
1128: 4c 24 08 48 83 c4 08 f2 
1136: 0f 5c c1 f2 0f 11 44 24 
1144: 00 50 f2 0f 10 44 24 00 
1152: 48 83 c4 08 f2 48 0f 2d 
1160: f0 48 c1 e6 03 49 01 f2 
1168: 5f 49 89 ba 38 00 00 00 
1176: 49 29 f2 50 f2 0f 10 44 
1184: 24 00 48 83 c4 08 f2 48 
1192: 0f 2d f0 48 c1 e6 03 49 
1200: 01 f2 49 8b ba 38 00 00 
1208: 00 57 49 29 f2 f2 0f 10 
1216: 44 24 00 41 52 53 52 51 
1224: 50 49 89 e4 48 83 e4 f0 
1232: e8 f7 15 0a fe 4c 89 e4 
1240: 58 59 5a 5b 41 5a 5f 50 
1248: f2 0f 10 44 24 00 48 83 
1256: c4 08 f2 48 0f 2d f0 48 
1264: c1 e6 03 49 01 f2 49 8b 
1272: ba 38 00 00 00 57 49 29 
1280: f2 48 be 00 00 00 00 00 
1288: 00 00 00 56 f2 0f 10 44 
1296: 24 00 f2 0f 10 4c 24 08 
1304: 48 83 c4 10 66 0f 2e c1 
1312: 0f 85 16 01 00 00 50 f2 
1320: 0f 10 44 24 00 48 83 c4 
1328: 08 f2 48 0f 2d f0 48 c1 
1336: e6 03 49 01 f2 49 8b ba 
1344: 10 00 00 00 57 49 29 f2 
1352: 48 be 00 00 00 00 00 00 
1360: 00 40 56 f2 0f 10 44 24 
1368: 00 f2 0f 10 4c 24 08 48 
1376: 83 c4 08 f2 0f 59 c1 f2 
1384: 0f 11 44 24 00 50 f2 0f 
1392: 10 44 24 00 48 83 c4 08 
1400: f2 48 0f 2d f0 48 c1 e6 
1408: 03 49 01 f2 49 8b ba 18 
1416: 00 00 00 57 49 29 f2 48 
1424: be 00 00 00 00 00 00 00 
1432: 00 56 f2 0f 10 44 24 00 
1440: f2 0f 10 4c 24 08 48 83 
1448: c4 08 f2 0f 5c c1 f2 0f 
1456: 11 44 24 00 f2 0f 10 44 
1464: 24 00 f2 0f 10 4c 24 08 
1472: 48 83 c4 08 f2 0f 5e c1 
1480: f2 0f 11 44 24 00 50 f2 
1488: 0f 10 44 24 00 48 83 c4 
1496: 08 f2 48 0f 2d f0 48 c1 
1504: e6 03 49 01 f2 5f 49 89 
1512: ba 28 00 00 00 49 29 f2 
1520: 50 f2 0f 10 44 24 00 48 
1528: 83 c4 08 f2 48 0f 2d f0 
1536: 48 c1 e6 03 49 01 f2 49 
1544: 8b ba 28 00 00 00 57 49 
1552: 29 f2 f2 0f 10 44 24 00 
1560: 41 52 53 52 51 50 49 89 
1568: e4 48 83 e4 f0 e8 a2 14 
1576: 0a fe 4c 89 e4 58 59 5a 
1584: 5b 41 5a 5f 5a 52 c3 e9 
1592: 00 00 00 00 48 be 00 00 
1600: 00 00 00 00 00 00 56 50 
1608: f2 0f 10 44 24 00 48 83 
1616: c4 08 f2 48 0f 2d f0 48 
1624: c1 e6 03 49 01 f2 49 8b 
1632: ba 38 00 00 00 57 49 29 
1640: f2 f2 0f 10 44 24 00 f2 
1648: 0f 10 4c 24 08 48 83 c4 
1656: 10 66 0f 2e c1 0f 87 |  
1664: 00 00 00 50 f2 0f 10 44 
1672: 24 00 48 83 c4 08 f2 48 
1680: 0f 2d f0 48 c1 e6 03 49 
1688: 01 f2 49 8b ba 30 00 00 
1696: 00 57 49 29 f2 f2 0f 10 
1704: 44 24 00 41 52 53 52 51 
1712: 50 49 89 e4 48 83 e4 f0 
1720: e8 0f 14 0a fe 4c 89 e4 
1728: 58 59 5a 5b 41 5a 5f 50 
1736: f2 0f 10 44 24 00 48 83 
1744: c4 08 f2 48 0f 2d f0 48 
1752: c1 e6 03 49 01 f2 49 8b 
1760: ba 30 00 00 00 57 49 29 
1768: f2 f2 0f 10 44 24 00 41 
1776: 52 53 52 51 50 49 89 e4 
1784: 48 83 e4 f0 e8 cb 13 0a 
1792: fe 4c 89 e4 58 59 5a 5b 
1800: 41 5a 5f 5a 52 c3 e9 b4 
1808: 02 00 00 48 be 00 00 00 
1816: 00 00 00 00 40 56 50 f2 
1824: 0f 10 44 24 00 48 83 c4 
1832: 08 f2 48 0f 2d f0 48 c1 
1840: e6 03 49 01 f2 49 8b ba 
1848: 10 00 00 00 57 49 29 f2 
1856: f2 0f 10 44 24 00 f2 0f 
1864: 10 4c 24 08 48 83 c4 08 
1872: f2 0f 59 c1 f2 0f 11 44 
1880: 24 00 50 f2 0f 10 44 24 
1888: 00 48 83 c4 08 f2 48 0f 
1896: 2d f0 48 c1 e6 03 49 01 
1904: f2 49 8b ba 18 00 00 00 
1912: 57 49 29 f2 48 be 00 00 
1920: 00 00 00 00 00 00 56 f2 
1928: 0f 10 44 24 00 f2 0f 10 
1936: 4c 24 08 48 83 c4 08 f2 
1944: 0f 5c c1 f2 0f 11 44 24 
1952: 00 50 f2 0f 10 44 24 00 
1960: 48 83 c4 08 f2 48 0f 2d 
1968: f0 48 c1 e6 03 49 01 f2 
1976: 49 8b ba 38 00 00 00 57 
1984: 49 29 f2 f2 0f 10 44 24 
1992: 00 66 0f 51 c0 f2 0f 11 
2000: 44 24 00 f2 0f 10 44 24 
2008: 00 f2 0f 10 4c 24 08 48 
2016: 83 c4 08 f2 0f 58 c1 f2 
2024: 0f 11 44 24 00 f2 0f 10 
2032: 44 24 00 f2 0f 10 4c 24 
2040: 08 48 83 c4 08 f2 0f 5e 
2048: c1 f2 0f 11 44 24 00 50 
2056: f2 0f 10 44 24 00 48 83 
2064: c4 08 f2 48 0f 2d f0 48 
2072: c1 e6 03 49 01 f2 5f 49 
2080: 89 ba 40 00 00 00 49 29 
2088: f2 48 be 00 00 00 00 00 
2096: 00 00 40 56 50 f2 0f 10 
2104: 44 24 00 48 83 c4 08 f2 
2112: 48 0f 2d f0 48 c1 e6 03 
2120: 49 01 f2 49 8b ba 10 00 
2128: 00 00 57 49 29 f2 f2 0f 
2136: 10 44 24 00 f2 0f 10 4c 
2144: 24 08 48 83 c4 08 f2 0f 
2152: 59 c1 f2 0f 11 44 24 00 
2160: 50 f2 0f 10 44 24 00 48 
2168: 83 c4 08 f2 48 0f 2d f0 
2176: 48 c1 e6 03 49 01 f2 49 
2184: 8b ba 38 00 00 00 57 49 
2192: 29 f2 f2 0f 10 44 24 00 
2200: 66 0f 51 c0 f2 0f 11 44 
2208: 24 00 50 f2 0f 10 44 24 
2216: 00 48 83 c4 08 f2 48 0f 
2224: 2d f0 48 c1 e6 03 49 01 
2232: f2 49 8b ba 18 00 00 00 
2240: 57 49 29 f2 48 be 00 00 
2248: 00 00 00 00 00 00 56 f2 
2256: 0f 10 44 24 00 f2 0f 10 
2264: 4c 24 08 48 83 c4 08 f2 
2272: 0f 5c c1 f2 0f 11 44 24 
2280: 00 f2 0f 10 44 24 00 f2 
2288: 0f 10 4c 24 08 48 83 c4 
2296: 08 f2 0f 5c c1 f2 0f 11 
2304: 44 24 00 f2 0f 10 44 24 
2312: 00 f2 0f 10 4c 24 08 48 
2320: 83 c4 08 f2 0f 5e c1 f2 
2328: 0f 11 44 24 00 50 f2 0f 
2336: 10 44 24 00 48 83 c4 08 
2344: f2 48 0f 2d f0 48 c1 e6 
2352: 03 49 01 f2 5f 49 89 ba 
2360: 48 00 00 00 49 29 f2 50 
2368: f2 0f 10 44 24 00 48 83 
2376: c4 08 f2 48 0f 2d f0 48 
2384: c1 e6 03 49 01 f2 49 8b 
2392: ba 40 00 00 00 57 49 29 
2400: f2 f2 0f 10 44 24 00 41 
2408: 52 53 52 51 50 49 89 e4 
2416: 48 83 e4 f0 e8 53 11 0a 
2424: fe 4c 89 e4 58 59 5a 5b 
2432: 41 5a 5f 50 f2 0f 10 44 
2440: 24 00 48 83 c4 08 f2 48 
2448: 0f 2d f0 48 c1 e6 03 49 
2456: 01 f2 49 8b ba 48 00 00 
2464: 00 57 49 29 f2 f2 0f 10 
2472: 44 24 00 41 52 53 52 51 
2480: 50 49 89 e4 48 83 e4 f0 
2488: e8 0f 11 0a fe 4c 89 e4 
2496: 58 59 5a 5b 41 5a 5f 5a 
2504: 52 c3 c3 00 

====== x86 buffer dump end =======

