Ip   8:
	Id: 17
	Yeah, it is jump
Ip  18:
	Id: 0
Ip  19:
	Id: 6
Ip  29:
	Id: 1
Ip  39:
	Id: 1
Ip  49:
	Id: 6
Ip  59:
	Id: 1
Ip  69:
	Id: 6
Ip  79:
	Id: 16
Ip  80:
	Id: 6
Ip  90:
	Id: 16
Ip  91:
	Id: 6
Ip 101:
	Id: 16
Ip 102:
	Id: 6
Ip 112:
	Id: 1
Ip 122:
	Id: 1
Ip 132:
	Id: 15
	Yeah, it is jump
Ip 142:
	Id: 1
Ip 152:
	Id: 1
Ip 162:
	Id: 15
	Yeah, it is jump
Ip 172:
	Id: 1
Ip 182:
	Id: 1
Ip 192:
	Id: 15
	Yeah, it is jump
Ip 202:
	Id: 1
Ip 212:
	Id: 7
Ip 213:
	Id: 6
Ip 223:
	Id: 1
Ip 233:
	Id: 18
Ip 234:
	Id: 9
	Yeah, it is jump
Ip 244:
	Id: 1
Ip 254:
	Id: 7
Ip 255:
	Id: 6
Ip 265:
	Id: 1
Ip 275:
	Id: 18
Ip 276:
	Id: 9
	Yeah, it is jump
Ip 286:
	Id: 1
Ip 296:
	Id: 1
Ip 306:
	Id: 1
Ip 316:
	Id: 4
Ip 317:
	Id: 5
Ip 318:
	Id: 6
Ip 328:
	Id: 1
Ip 338:
	Id: 7
Ip 339:
	Id: 6
Ip 349:
	Id: 1
Ip 359:
	Id: 18
Ip 360:
	Id: 9
	Yeah, it is jump
Ip 370:
	Id: 1
Ip 380:
	Id: 6
Ip 390:
	Id: 1
Ip 400:
	Id: 1
Ip 410:
	Id: 2
Ip 411:
	Id: 1
Ip 421:
	Id: 2
Ip 422:
	Id: 1
Ip 432:
	Id: 1
Ip 442:
	Id: 2
Ip 443:
	Id: 4
Ip 444:
	Id: 6
Ip 454:
	Id: 1
Ip 464:
	Id: 7
Ip 465:
	Id: 1
Ip 475:
	Id: 1
Ip 485:
	Id: 15
	Yeah, it is jump
Ip 495:
	Id: 1
Ip 505:
	Id: 1
Ip 515:
	Id: 2
Ip 516:
	Id: 1
Ip 526:
	Id: 1
Ip 536:
	Id: 4
Ip 537:
	Id: 5
Ip 538:
	Id: 6
Ip 548:
	Id: 1
Ip 558:
	Id: 7
Ip 559:
	Id: 6
Ip 569:
	Id: 1
Ip 579:
	Id: 18
Ip 580:
	Id: 9
	Yeah, it is jump
Ip 590:
	Id: 1
Ip 600:
	Id: 1
Ip 610:
	Id: 12
	Yeah, it is jump
Ip 620:
	Id: 1
Ip 630:
	Id: 7
Ip 631:
	Id: 1
Ip 641:
	Id: 7
Ip 642:
	Id: 6
Ip 652:
	Id: 1
Ip 662:
	Id: 18
Ip 663:
	Id: 9
	Yeah, it is jump
Ip 673:
	Id: 1
Ip 683:
	Id: 1
Ip 693:
	Id: 2
Ip 694:
	Id: 1
Ip 704:
	Id: 1
Ip 714:
	Id: 4
Ip 715:
	Id: 1
Ip 725:
	Id: 19
Ip 726:
	Id: 3
Ip 727:
	Id: 5
Ip 728:
	Id: 6
Ip 738:
	Id: 1
Ip 748:
	Id: 1
Ip 758:
	Id: 2
Ip 759:
	Id: 1
Ip 769:
	Id: 19
Ip 770:
	Id: 1
Ip 780:
	Id: 1
Ip 790:
	Id: 4
Ip 791:
	Id: 4
Ip 792:
	Id: 5
Ip 793:
	Id: 6
Ip 803:
	Id: 1
Ip 813:
	Id: 7
Ip 814:
	Id: 1
Ip 824:
	Id: 7
Ip 825:
	Id: 6
Ip 835:
	Id: 1
Ip 845:
	Id: 18
Ip 846:
End of prog.

================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 19

Command < HLT: 0 > | Native/x86 size: 1/7 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/18 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/18 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/18 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 370

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 286

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 244

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 276

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 360

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 390

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 590

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 590

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 673

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 825

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 0

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 0
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 0

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 0
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 0

================ End of struct dump ==================

Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: mov r?x, num
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics
Optimization attempt: constant arithmetics


---------- Filling labels --------

	Yeah, it is jump
 0: Trying to find x86 ip for ip 19:
	 Found, x86 ip is 12
	Yeah, it is jump
16: Trying to find x86 ip for ip 370:
	 Found, x86 ip is 887
	Yeah, it is jump
19: Trying to find x86 ip for ip 286:
	 Found, x86 ip is 639
	Yeah, it is jump
22: Trying to find x86 ip for ip 244:
	 Found, x86 ip is 556
	Yeah, it is jump
28: Trying to find x86 ip for ip 276:
	 Found, x86 ip is 634
	Yeah, it is jump
34: Trying to find x86 ip for ip 360:
	 Found, x86 ip is 882
	Yeah, it is jump
46: Trying to find x86 ip for ip 390:
	 Found, x86 ip is 932
	Yeah, it is jump
63: Trying to find x86 ip for ip 590:
	 Found, x86 ip is 1648
	Yeah, it is jump
77: Trying to find x86 ip for ip 590:
	 Found, x86 ip is 1648
	Yeah, it is jump
80: Trying to find x86 ip for ip 673:
	 Found, x86 ip is 1877
	Yeah, it is jump
88: Trying to find x86 ip for ip 825:
	 Found, x86 ip is 2583


---------- End filling labels --------


================ Begin of struct dump ==================

Command < CALL: 17 > | Native/x86 size: 10/5 | x86 ip: 0
	Yeah, it is jump
	+Wants to jump into 12

Command < HLT: 0 > | Native/x86 size: 1/7 | x86 ip: 5

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 12
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 13
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 14
Checksum: 32
	+Operating width digit, value: 3802

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 25
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 59
Checksum: 32
	+Operating width digit, value: 2083

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 70
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/18 | x86 ip: 104

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 122
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/18 | x86 ip: 156

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 174
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < IN: 16 > | Native/x86 size: 1/18 | x86 ip: 208

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 226
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 260
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 294
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 305
	Yeah, it is jump
	+Wants to jump into 887

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 331
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 365
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 376
	Yeah, it is jump
	+Wants to jump into 639

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 402
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 436
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 447
	Yeah, it is jump
	+Wants to jump into 556

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 473
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 507

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 548
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 549
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 550

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 551
	Yeah, it is jump
	+Wants to jump into 634

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 556
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 0
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 590

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 631
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 632
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 633

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 634
	Yeah, it is jump
	+Wants to jump into 882

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 639
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 673
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 707
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 718

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 744

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 770
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 804
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 838

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 879
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 880
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 881

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 882
	Yeah, it is jump
	+Wants to jump into 932

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 887
Checksum: 32
	+Operating width digit, value: 1337

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 898
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 932
Checksum: 32
	+Operating width digit, value: 4

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 943
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 977

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1003
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 4
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1037

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1063
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1097
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1131

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1157

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1183
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1217
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1251

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1292
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1326
Checksum: 32
	+Operating width digit, value: 0

Command < JNE: 15 > | Native/x86 size: 10/26 | x86 ip: 1337
	Yeah, it is jump
	+Wants to jump into 1648

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1363
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1397
Checksum: 32
	+Operating width digit, value: 2

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1408

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1434
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1468
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1479

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 1505

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 1531
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1565
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 5
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1599

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1640
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1641
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1642

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1643
	Yeah, it is jump
	+Wants to jump into 1648

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1648
Checksum: 32
	+Operating width digit, value: 0

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1659
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < JA: 12 > | Native/x86 size: 10/26 | x86 ip: 1693
	Yeah, it is jump
	+Wants to jump into 1877

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1719
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1753

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1794
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 6
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 1828

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 1869
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 1870
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 1871

Command < JMP: 9 > | Native/x86 size: 10/5 | x86 ip: 1872
	Yeah, it is jump
	+Wants to jump into 2583

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1877
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1888
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 1922

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 1948
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 1982
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 1993

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2019
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 2053

Command < ADD: 3 > | Native/x86 size: 1/26 | x86 ip: 2069

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2095

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2121
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2155
Checksum: 32
	+Operating width digit, value: 2

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2166
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 2
--- Adresses to memory

Command < MUL: 2 > | Native/x86 size: 1/26 | x86 ip: 2200

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2226
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 7
--- Adresses to memory

Command < SQR: 19 > | Native/x86 size: 1/16 | x86 ip: 2260

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2276
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 3
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/11 | x86 ip: 2310
Checksum: 32
	+Operating width digit, value: 0

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2321

Command < SUB: 4 > | Native/x86 size: 1/26 | x86 ip: 2347

Command < DIV: 5 > | Native/x86 size: 1/26 | x86 ip: 2373

Command < POP: 6 > | Native/x86 size: 10/34 | x86 ip: 2399
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2433
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 8
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 2467

Command < PUSH: 1 > | Native/x86 size: 10/34 | x86 ip: 2508
Checksum: 224
	+Using register, its id: 0
	+Operating width digit, value: 9
--- Adresses to memory

Command < OUT: 7 > | Native/x86 size: 1/41 | x86 ip: 2542

Command < POP: 6 > | Native/x86 size: 10/1 | x86 ip: 2583
Checksum: 64
	+Using register, its id: 2

Command < PUSH: 1 > | Native/x86 size: 10/1 | x86 ip: 2584
Checksum: 64
	+Using register, its id: 2

Command < RET: 18 > | Native/x86 size: 1/1 | x86 ip: 2585

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

Translating Jump or Call
##########
	 0: e8 
##########

Translating exit()

##########
	 0: 6a 3c 58 31 ff 0f 05 
##########

12:Push/Pop REG

##########
	 0: 5a 
##########

13:Push/Pop REG

##########
	 0: 52 
##########

<14>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<59>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating IN
##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: e8 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating IN
##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: e8 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating IN
##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: e8 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<294>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

16: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<365>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

19: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<436>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

22: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

548:Push/Pop REG

##########
	 0: 5a 
##########

549:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

631:Push/Pop REG

##########
	 0: 5a 
##########

632:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<707>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

38: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

39: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

879:Push/Pop REG

##########
	 0: 5a 
##########

880:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<887>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<932>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

51: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

53: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

56: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

57: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1326>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

63: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 85 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1397>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

66: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1468>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

69: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

70: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1640:Push/Pop REG

##########
	 0: 5a 
##########

1641:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1648>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

80: Translating jmp

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 10 
##########


##########
	 0: 66 0f 2e c1 
##########


##########
	 0: 0f 87 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

1869:Push/Pop REG

##########
	 0: 5a 
##########

1870:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########

Translating Jump or Call
##########
	 0: e9 
##########

<1877>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

91: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<1982>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

94: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

97: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 58 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

98: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

<2155>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

102: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 59 c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 66 0f 51 c0 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

<2310>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

107: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

108: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5c c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

109: Translating math

##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 0f 10 4c 24 08 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 0f 5e c1 
##########


##########
	 0: f2 0f 11 44 24 00 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 29 f2 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 56 
##########


##########
	 0: 58 
##########


##########
	 0: 41 52 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 41 5a 
##########


##########
	 0: 5f 
##########

2583:Push/Pop REG

##########
	 0: 5a 
##########

2584:Push/Pop REG

##########
	 0: 52 
##########

Translating RET
##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba e8 17 40 00 00 00 
 8: 00 00 e8 07 00 00 00 6a 
16: 3c 58 31 ff 0f 05 5a 52 
24: 48 be 00 00 00 00 00 b4 
32: ad 40 56 50 f2 0f 10 44 
40: 24 00 48 83 c4 08 f2 48 
48: 0f 2d f0 48 c1 e6 03 49 
56: 01 f2 5f 49 89 ba 00 00 
64: 00 00 49 29 f2 48 be 00 
72: 00 00 00 00 46 a0 40 56 
80: 50 f2 0f 10 44 24 00 48 
88: 83 c4 08 f2 48 0f 2d f0 
96: 48 c1 e6 03 49 01 f2 5f 
104: 49 89 ba 08 00 00 00 49 
112: 29 f2 41 52 53 52 51 50 
120: e8 82 0a 00 00 58 59 5a 
128: 5b 41 5a 56 50 f2 0f 10 
136: 44 24 00 48 83 c4 08 f2 
144: 48 0f 2d f0 48 c1 e6 03 
152: 49 01 f2 5f 49 89 ba 10 
160: 00 00 00 49 29 f2 41 52 
168: 53 52 51 50 e8 4e 0a 00 
176: 00 58 59 5a 5b 41 5a 56 
184: 50 f2 0f 10 44 24 00 48 
192: 83 c4 08 f2 48 0f 2d f0 
200: 48 c1 e6 03 49 01 f2 5f 
208: 49 89 ba 18 00 00 00 49 
216: 29 f2 41 52 53 52 51 50 
224: e8 1a 0a 00 00 58 59 5a 
232: 5b 41 5a 56 50 f2 0f 10 
240: 44 24 00 48 83 c4 08 f2 
248: 48 0f 2d f0 48 c1 e6 03 
256: 49 01 f2 5f 49 89 ba 20 
264: 00 00 00 49 29 f2 50 f2 
272: 0f 10 44 24 00 48 83 c4 
280: 08 f2 48 0f 2d f0 48 c1 
288: e6 03 49 01 f2 49 8b ba 
296: 10 00 00 00 57 49 29 f2 
304: 48 be 00 00 00 00 00 00 
312: 00 00 56 f2 0f 10 44 24 
320: 00 f2 0f 10 4c 24 08 48 
328: 83 c4 10 66 0f 2e c1 0f 
336: 85 2c 02 00 00 50 f2 0f 
344: 10 44 24 00 48 83 c4 08 
352: f2 48 0f 2d f0 48 c1 e6 
360: 03 49 01 f2 49 8b ba 18 
368: 00 00 00 57 49 29 f2 48 
376: be 00 00 00 00 00 00 00 
384: 00 56 f2 0f 10 44 24 00 
392: f2 0f 10 4c 24 08 48 83 
400: c4 10 66 0f 2e c1 0f 85 
408: ed 00 00 00 50 f2 0f 10 
416: 44 24 00 48 83 c4 08 f2 
424: 48 0f 2d f0 48 c1 e6 03 
432: 49 01 f2 49 8b ba 20 00 
440: 00 00 57 49 29 f2 48 be 
448: 00 00 00 00 00 00 00 00 
456: 56 f2 0f 10 44 24 00 f2 
464: 0f 10 4c 24 08 48 83 c4 
472: 10 66 0f 2e c1 0f 85 53 
480: 00 00 00 50 f2 0f 10 44 
488: 24 00 48 83 c4 08 f2 48 
496: 0f 2d f0 48 c1 e6 03 49 
504: 01 f2 49 8b ba 08 00 00 
512: 00 57 49 29 f2 f2 0f 10 
520: 44 24 00 f2 48 0f 2d f0 
528: 56 58 41 52 53 52 51 50 
536: 49 89 e4 48 83 e4 f0 e8 
544: 00 08 00 00 4c 89 e4 58 
552: 59 5a 5b 41 5a 5f 5a 52 
560: c3 e9 4e 00 00 00 50 f2 
568: 0f 10 44 24 00 48 83 c4 
576: 08 f2 48 0f 2d f0 48 c1 
584: e6 03 49 01 f2 49 8b ba 
592: 00 00 00 00 57 49 29 f2 
600: f2 0f 10 44 24 00 f2 48 
608: 0f 2d f0 56 58 41 52 53 
616: 52 51 50 49 89 e4 48 83 
624: e4 f0 e8 ad 07 00 00 4c 
632: 89 e4 58 59 5a 5b 41 5a 
640: 5f 5a 52 c3 e9 f3 00 00 
648: 00 50 f2 0f 10 44 24 00 
656: 48 83 c4 08 f2 48 0f 2d 
664: f0 48 c1 e6 03 49 01 f2 
672: 49 8b ba 18 00 00 00 57 
680: 49 29 f2 50 f2 0f 10 44 
688: 24 00 48 83 c4 08 f2 48 
696: 0f 2d f0 48 c1 e6 03 49 
704: 01 f2 49 8b ba 20 00 00 
712: 00 57 49 29 f2 48 be 00 
720: 00 00 00 00 00 00 00 56 
728: f2 0f 10 44 24 00 f2 0f 
736: 10 4c 24 08 48 83 c4 08 
744: f2 0f 5c c1 f2 0f 11 44 
752: 24 00 f2 0f 10 44 24 00 
760: f2 0f 10 4c 24 08 48 83 
768: c4 08 f2 0f 5e c1 f2 0f 
776: 11 44 24 00 50 f2 0f 10 
784: 44 24 00 48 83 c4 08 f2 
792: 48 0f 2d f0 48 c1 e6 03 
800: 49 01 f2 5f 49 89 ba 28 
808: 00 00 00 49 29 f2 50 f2 
816: 0f 10 44 24 00 48 83 c4 
824: 08 f2 48 0f 2d f0 48 c1 
832: e6 03 49 01 f2 49 8b ba 
840: 28 00 00 00 57 49 29 f2 
848: f2 0f 10 44 24 00 f2 48 
856: 0f 2d f0 56 58 41 52 53 
864: 52 51 50 49 89 e4 48 83 
872: e4 f0 e8 b5 06 00 00 4c 
880: 89 e4 58 59 5a 5b 41 5a 
888: 5f 5a 52 c3 e9 2d 00 00 
896: 00 48 be 00 00 00 00 00 
904: e4 94 40 56 50 f2 0f 10 
912: 44 24 00 48 83 c4 08 f2 
920: 48 0f 2d f0 48 c1 e6 03 
928: 49 01 f2 5f 49 89 ba 30 
936: 00 00 00 49 29 f2 48 be 
944: 00 00 00 00 00 00 10 40 
952: 56 50 f2 0f 10 44 24 00 
960: 48 83 c4 08 f2 48 0f 2d 
968: f0 48 c1 e6 03 49 01 f2 
976: 49 8b ba 10 00 00 00 57 
984: 49 29 f2 f2 0f 10 44 24 
992: 00 f2 0f 10 4c 24 08 48 
1000: 83 c4 08 f2 0f 59 c1 f2 
1008: 0f 11 44 24 00 50 f2 0f 
1016: 10 44 24 00 48 83 c4 08 
1024: f2 48 0f 2d f0 48 c1 e6 
1032: 03 49 01 f2 49 8b ba 20 
1040: 00 00 00 57 49 29 f2 f2 
1048: 0f 10 44 24 00 f2 0f 10 
1056: 4c 24 08 48 83 c4 08 f2 
1064: 0f 59 c1 f2 0f 11 44 24 
1072: 00 50 f2 0f 10 44 24 00 
1080: 48 83 c4 08 f2 48 0f 2d 
1088: f0 48 c1 e6 03 49 01 f2 
1096: 49 8b ba 18 00 00 00 57 
1104: 49 29 f2 50 f2 0f 10 44 
1112: 24 00 48 83 c4 08 f2 48 
1120: 0f 2d f0 48 c1 e6 03 49 
1128: 01 f2 49 8b ba 18 00 00 
1136: 00 57 49 29 f2 f2 0f 10 
1144: 44 24 00 f2 0f 10 4c 24 
1152: 08 48 83 c4 08 f2 0f 59 
1160: c1 f2 0f 11 44 24 00 f2 
1168: 0f 10 44 24 00 f2 0f 10 
1176: 4c 24 08 48 83 c4 08 f2 
1184: 0f 5c c1 f2 0f 11 44 24 
1192: 00 50 f2 0f 10 44 24 00 
1200: 48 83 c4 08 f2 48 0f 2d 
1208: f0 48 c1 e6 03 49 01 f2 
1216: 5f 49 89 ba 38 00 00 00 
1224: 49 29 f2 50 f2 0f 10 44 
1232: 24 00 48 83 c4 08 f2 48 
1240: 0f 2d f0 48 c1 e6 03 49 
1248: 01 f2 49 8b ba 38 00 00 
1256: 00 57 49 29 f2 f2 0f 10 
1264: 44 24 00 f2 48 0f 2d f0 
1272: 56 58 41 52 53 52 51 50 
1280: 49 89 e4 48 83 e4 f0 e8 
1288: 18 05 00 00 4c 89 e4 58 
1296: 59 5a 5b 41 5a 5f 50 f2 
1304: 0f 10 44 24 00 48 83 c4 
1312: 08 f2 48 0f 2d f0 48 c1 
1320: e6 03 49 01 f2 49 8b ba 
1328: 38 00 00 00 57 49 29 f2 
1336: 48 be 00 00 00 00 00 00 
1344: 00 00 56 f2 0f 10 44 24 
1352: 00 f2 0f 10 4c 24 08 48 
1360: 83 c4 10 66 0f 2e c1 0f 
1368: 85 1d 01 00 00 50 f2 0f 
1376: 10 44 24 00 48 83 c4 08 
1384: f2 48 0f 2d f0 48 c1 e6 
1392: 03 49 01 f2 49 8b ba 10 
1400: 00 00 00 57 49 29 f2 48 
1408: be 00 00 00 00 00 00 00 
1416: 40 56 f2 0f 10 44 24 00 
1424: f2 0f 10 4c 24 08 48 83 
1432: c4 08 f2 0f 59 c1 f2 0f 
1440: 11 44 24 00 50 f2 0f 10 
1448: 44 24 00 48 83 c4 08 f2 
1456: 48 0f 2d f0 48 c1 e6 03 
1464: 49 01 f2 49 8b ba 18 00 
1472: 00 00 57 49 29 f2 48 be 
1480: 00 00 00 00 00 00 00 00 
1488: 56 f2 0f 10 44 24 00 f2 
1496: 0f 10 4c 24 08 48 83 c4 
1504: 08 f2 0f 5c c1 f2 0f 11 
1512: 44 24 00 f2 0f 10 44 24 
1520: 00 f2 0f 10 4c 24 08 48 
1528: 83 c4 08 f2 0f 5e c1 f2 
1536: 0f 11 44 24 00 50 f2 0f 
1544: 10 44 24 00 48 83 c4 08 
1552: f2 48 0f 2d f0 48 c1 e6 
1560: 03 49 01 f2 5f 49 89 ba 
1568: 28 00 00 00 49 29 f2 50 
1576: f2 0f 10 44 24 00 48 83 
1584: c4 08 f2 48 0f 2d f0 48 
1592: c1 e6 03 49 01 f2 49 8b 
1600: ba 28 00 00 00 57 49 29 
1608: f2 f2 0f 10 44 24 00 f2 
1616: 48 0f 2d f0 56 58 41 52 
1624: 53 52 51 50 49 89 e4 48 
1632: 83 e4 f0 e8 bc 03 00 00 
1640: 4c 89 e4 58 59 5a 5b 41 
1648: 5a 5f 5a 52 c3 e9 00 00 
1656: 00 00 48 be 00 00 00 00 
1664: 00 00 00 00 56 50 f2 0f 
1672: 10 44 24 00 48 83 c4 08 
1680: f2 48 0f 2d f0 48 c1 e6 
1688: 03 49 01 f2 49 8b ba 38 
1696: 00 00 00 57 49 29 f2 f2 
1704: 0f 10 44 24 00 f2 0f 10 
1712: 4c 24 08 48 83 c4 10 66 
1720: 0f 2e c1 0f 87 9e 00 00 
1728: 00 50 f2 0f 10 44 24 00 
1736: 48 83 c4 08 f2 48 0f 2d 
1744: f0 48 c1 e6 03 49 01 f2 
1752: 49 8b ba 30 00 00 00 57 
1760: 49 29 f2 f2 0f 10 44 24 
1768: 00 f2 48 0f 2d f0 56 58 
1776: 41 52 53 52 51 50 49 89 
1784: e4 48 83 e4 f0 e8 22 03 
1792: 00 00 4c 89 e4 58 59 5a 
1800: 5b 41 5a 5f 50 f2 0f 10 
1808: 44 24 00 48 83 c4 08 f2 
1816: 48 0f 2d f0 48 c1 e6 03 
1824: 49 01 f2 49 8b ba 30 00 
1832: 00 00 57 49 29 f2 f2 0f 
1840: 10 44 24 00 f2 48 0f 2d 
1848: f0 56 58 41 52 53 52 51 
1856: 50 49 89 e4 48 83 e4 f0 
1864: e8 d7 02 00 00 4c 89 e4 
1872: 58 59 5a 5b 41 5a 5f 5a 
1880: 52 c3 e9 c2 02 00 00 48 
1888: be 00 00 00 00 00 00 00 
1896: 40 56 50 f2 0f 10 44 24 
1904: 00 48 83 c4 08 f2 48 0f 
1912: 2d f0 48 c1 e6 03 49 01 
1920: f2 49 8b ba 10 00 00 00 
1928: 57 49 29 f2 f2 0f 10 44 
1936: 24 00 f2 0f 10 4c 24 08 
1944: 48 83 c4 08 f2 0f 59 c1 
1952: f2 0f 11 44 24 00 50 f2 
1960: 0f 10 44 24 00 48 83 c4 
1968: 08 f2 48 0f 2d f0 48 c1 
1976: e6 03 49 01 f2 49 8b ba 
1984: 18 00 00 00 57 49 29 f2 
1992: 48 be 00 00 00 00 00 00 
2000: 00 00 56 f2 0f 10 44 24 
2008: 00 f2 0f 10 4c 24 08 48 
2016: 83 c4 08 f2 0f 5c c1 f2 
2024: 0f 11 44 24 00 50 f2 0f 
2032: 10 44 24 00 48 83 c4 08 
2040: f2 48 0f 2d f0 48 c1 e6 
2048: 03 49 01 f2 49 8b ba 38 
2056: 00 00 00 57 49 29 f2 f2 
2064: 0f 10 44 24 00 66 0f 51 
2072: c0 f2 0f 11 44 24 00 f2 
2080: 0f 10 44 24 00 f2 0f 10 
2088: 4c 24 08 48 83 c4 08 f2 
2096: 0f 58 c1 f2 0f 11 44 24 
2104: 00 f2 0f 10 44 24 00 f2 
2112: 0f 10 4c 24 08 48 83 c4 
2120: 08 f2 0f 5e c1 f2 0f 11 
2128: 44 24 00 50 f2 0f 10 44 
2136: 24 00 48 83 c4 08 f2 48 
2144: 0f 2d f0 48 c1 e6 03 49 
2152: 01 f2 5f 49 89 ba 40 00 
2160: 00 00 49 29 f2 48 be 00 
2168: 00 00 00 00 00 00 40 56 
2176: 50 f2 0f 10 44 24 00 48 
2184: 83 c4 08 f2 48 0f 2d f0 
2192: 48 c1 e6 03 49 01 f2 49 
2200: 8b ba 10 00 00 00 57 49 
2208: 29 f2 f2 0f 10 44 24 00 
2216: f2 0f 10 4c 24 08 48 83 
2224: c4 08 f2 0f 59 c1 f2 0f 
2232: 11 44 24 00 50 f2 0f 10 
2240: 44 24 00 48 83 c4 08 f2 
2248: 48 0f 2d f0 48 c1 e6 03 
2256: 49 01 f2 49 8b ba 38 00 
2264: 00 00 57 49 29 f2 f2 0f 
2272: 10 44 24 00 66 0f 51 c0 
2280: f2 0f 11 44 24 00 50 f2 
2288: 0f 10 44 24 00 48 83 c4 
2296: 08 f2 48 0f 2d f0 48 c1 
2304: e6 03 49 01 f2 49 8b ba 
2312: 18 00 00 00 57 49 29 f2 
2320: 48 be 00 00 00 00 00 00 
2328: 00 00 56 f2 0f 10 44 24 
2336: 00 f2 0f 10 4c 24 08 48 
2344: 83 c4 08 f2 0f 5c c1 f2 
2352: 0f 11 44 24 00 f2 0f 10 
2360: 44 24 00 f2 0f 10 4c 24 
2368: 08 48 83 c4 08 f2 0f 5c 
2376: c1 f2 0f 11 44 24 00 f2 
2384: 0f 10 44 24 00 f2 0f 10 
2392: 4c 24 08 48 83 c4 08 f2 
2400: 0f 5e c1 f2 0f 11 44 24 
2408: 00 50 f2 0f 10 44 24 00 
2416: 48 83 c4 08 f2 48 0f 2d 
2424: f0 48 c1 e6 03 49 01 f2 
2432: 5f 49 89 ba 48 00 00 00 
2440: 49 29 f2 50 f2 0f 10 44 
2448: 24 00 48 83 c4 08 f2 48 
2456: 0f 2d f0 48 c1 e6 03 49 
2464: 01 f2 49 8b ba 40 00 00 
2472: 00 57 49 29 f2 f2 0f 10 
2480: 44 24 00 f2 48 0f 2d f0 
2488: 56 58 41 52 53 52 51 50 
2496: 49 89 e4 48 83 e4 f0 e8 
2504: 58 00 00 00 4c 89 e4 58 
2512: 59 5a 5b 41 5a 5f 50 f2 
2520: 0f 10 44 24 00 48 83 c4 
2528: 08 f2 48 0f 2d f0 48 c1 
2536: e6 03 49 01 f2 49 8b ba 
2544: 48 00 00 00 57 49 29 f2 
2552: f2 0f 10 44 24 00 f2 48 
2560: 0f 2d f0 56 58 41 52 53 
2568: 52 51 50 49 89 e4 48 83 
2576: e4 f0 e8 0d 00 00 00 4c 
2584: 89 e4 58 59 5a 5b 41 5a 
2592: 5f 5a 52 c3 00 

====== x86 buffer dump end =======

