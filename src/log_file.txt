Ip   8:
	Id: 1
Ip  18:
	Id: 6
Ip  28:
	Id: 1
Ip  38:
	Id: 7
Ip  39:
	Id: 18
Ip  40:
End of prog.

================ Begin of struct dump ==================

Command < PUSH > | Orig ip: 8 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1

Command < POP > | Orig ip: 18 | x86 ip: 11
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 28 | x86 ip: 19
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT > | Orig ip: 38 | x86 ip: 27

Command < RET > | Orig ip: 39 | x86 ip: 56

================ End of struct dump ==================



---------- Filling labels --------



---------- End filling labels --------


================ Begin of struct dump ==================

Command < PUSH > | Orig ip: 8 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 1

Command < POP > | Orig ip: 18 | x86 ip: 11
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < PUSH > | Orig ip: 28 | x86 ip: 19
Checksum: 160
	+Operating width digit, value: 1
--- Adresses to memory

Command < OUT > | Orig ip: 38 | x86 ip: 27

Command < RET > | Orig ip: 39 | x86 ip: 56

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

<0>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########


##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba 00 e0 f6 00 00 00 
 8: 00 00 48 be 00 00 00 00 
16: 00 00 f0 3f 56 5f 49 89 
24: ba 08 00 00 00 49 8b ba 
32: 08 00 00 00 57 f2 0f 10 
40: 44 24 00 53 52 51 50 49 
48: 89 e4 48 83 e4 f0 e8 23 
56: 49 49 ff 4c 89 e4 58 59 
64: 5a 5b 5f c3 c3 00 

====== x86 buffer dump end =======

