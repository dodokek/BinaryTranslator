Ip   8:
	Id: 1
Ip  18:
	Id: 6
Ip  28:
	Id: 1
Ip  38:
	Id: 6
Ip  48:
	Id: 1
Ip  58:
	Id: 7
Ip  59:
	Id: 18
Ip  60:
End of prog.

================ Begin of struct dump ==================

Command < PUSH > | Orig ip: 8 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 25

Command < POP > | Orig ip: 18 | x86 ip: 11
Checksum: 160
	+Operating width digit, value: 25
--- Adresses to memory

Command < PUSH > | Orig ip: 28 | x86 ip: 19
Checksum: 32
	+Operating width digit, value: 25

Command < POP > | Orig ip: 38 | x86 ip: 30
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 48 | x86 ip: 31
Checksum: 192
	+Using register, its id: 0
--- Adresses to memory

Command < OUT > | Orig ip: 58 | x86 ip: 61

Command < RET > | Orig ip: 59 | x86 ip: 91

================ End of struct dump ==================



---------- Filling labels --------



---------- End filling labels --------


================ Begin of struct dump ==================

Command < PUSH > | Orig ip: 8 | x86 ip: 0
Checksum: 32
	+Operating width digit, value: 25

Command < POP > | Orig ip: 18 | x86 ip: 11
Checksum: 160
	+Operating width digit, value: 25
--- Adresses to memory

Command < PUSH > | Orig ip: 28 | x86 ip: 19
Checksum: 32
	+Operating width digit, value: 25

Command < POP > | Orig ip: 38 | x86 ip: 30
Checksum: 64
	+Using register, its id: 0

Command < PUSH > | Orig ip: 48 | x86 ip: 31
Checksum: 192
	+Using register, its id: 0
--- Adresses to memory

Command < OUT > | Orig ip: 58 | x86 ip: 61

Command < RET > | Orig ip: 59 | x86 ip: 91

================ End of struct dump ==================

---------- Begin translation -------------

##########
	 0: 49 ba 
##########

<0>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########


##########
	 0: 5f 
##########


##########
	 0: 49 89 ba 
##########

<19>:Push IMM

##########
	 0: 48 be 
##########


##########
	 0: 56 
##########

30:Push/Pop REG

##########
	 0: 58 
##########

Translating push ram

##########
	 0: 50 
##########


##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 48 83 c4 08 
##########


##########
	 0: f2 48 0f 2d f0 
##########


##########
	 0: 48 c1 e6 03 
##########


##########
	 0: 49 01 f2 
##########


##########
	 0: 49 8b ba 
##########


##########
	 0: 57 
##########


##########
	 0: 49 29 f2 
##########

Translating OUT
##########
	 0: f2 0f 10 44 24 00 
##########


##########
	 0: 53 52 51 50 
##########


##########
	 0: 49 89 e4 
##########


##########
	 0: 48 83 e4 f0 
##########


##########
	 0: e8 
##########


##########
	 0: 4c 89 e4 
##########


##########
	 0: 58 59 5a 5b 
##########


##########
	 0: 5f 
##########

Translating RET
##########
	 0: c3 
##########


##########
	 0: c3 
##########



====== x86 buffer dump begin =======

 0: 49 ba 00 10 cd 01 00 00 
 8: 00 00 48 be 00 00 00 00 
16: 00 00 39 40 56 5f 49 89 
24: ba c8 00 00 00 48 be 00 
32: 00 00 00 00 00 39 40 56 
40: 58 50 f2 0f 10 44 24 00 
48: 48 83 c4 08 f2 48 0f 2d 
56: f0 48 c1 e6 03 49 01 f2 
64: 49 8b ba 00 00 00 00 57 
72: 49 29 f2 f2 0f 10 44 24 
80: 00 53 52 51 50 49 89 e4 
88: 48 83 e4 f0 e8 31 21 73 
96: fe 4c 89 e4 58 59 5a 5b 
104: 5f c3 c3 00 

====== x86 buffer dump end =======

